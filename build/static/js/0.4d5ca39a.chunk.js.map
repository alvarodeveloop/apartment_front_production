{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/react-table/index.js","../node_modules/match-sorter/dist/match-sorter.esm.js","../../src/constants.js","../../src/sheet/Tag.js","../../src/sheet/GroupedTag.js","../../src/sheet/GroupIDAllocator.js","../../src/sheet/Sheet.js","../../src/utils/isStaticRules.js","../../src/models/ComponentStyle.js","../../src/models/StyledComponent.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/remove-accents/index.js","../node_modules/shallowequal/index.js","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/memoize/dist/memoize.browser.esm.js","../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","module","exports","require","rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","STRING_CASE","STRING_CASE_ACRONYM","CONTAINS","ACRONYM","MATCHES","NO_MATCH","caseRankings","CAMEL","PASCAL","KEBAB","SNAKE","NO_CASE","matchSorter","items","options","_options","keys","_options$threshold","threshold","reduce","matches","item","index","_getHighestRanking","rankedItem","rank","getMatchRanking","keyIndex","keyThreshold","allVals","key","values","indexOf","split","itemObj","nestedKey","concat","getItemValues","forEach","itemValue","push","attributes","getKeyAttributes","getAllValuesToRank","_ref2","_ref3","i","newRank","newRankedItem","minRanking","maxRanking","getHighestRanking","_getHighestRanking$ke","sort","sortRankedItems","map","_ref","testString","stringToRank","prepareValueForComparison","length","caseRank","containsUpperCase","toLowerCase","containsDash","containsUnderscore","toUpperCase","getCaseRanking","isPartial","caseRanking","testIndex","isPartialOfCase","isCasedAcronym","splitValue","splitTestString","correct","char","charIndex","splitItem","isCaseAcronym","string","acronym","wordInString","splitByHyphenWord","substr","getAcronym","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","j","firstIndex","spread","inOrderPercentage","getRanking","getClosenessRanking","a","b","aRankedItem","aRank","aKeyIndex","bRankedItem","bRank","bKeyIndex","String","localeCompare","_ref4","keepDiacritics","removeAccents","_extends","Infinity","nodes","insertRule","names","id","isCompositeComponent","actions","init","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","React","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","assignColumnAccessor","flattenColumns","flattenBy","accessor","Header","accessorPath","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","exactText","exactTextCase","includesAll","every","exact","equals","between","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","Set","size","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","from","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","characterMap","chars","allAccents","RegExp","firstAccent","match","has","remove","objA","objB","compare","compareContext","ret","call","keysA","keysB","bHasOwnProperty","hasOwnProperty","bind","idx","valueA","valueB","stylis_min","W","X","h","trim","ia","m","Z","v","n","charCodeAt","F","P","substring","w","L","ja","ka","test","G","ba","la","ma","R","na","ea","oa","H","q","x","A","S","B","U","prefix","D","z","M","k","y","C","K","l","r","I","t","J","f","p","N","charAt","ca","O","da","fa","Y","E","ha","Q","use","T","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","reactPropsRegex","cache","arg","prop"],"mappings":"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","file":"static/js/0.4d5ca39a.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return matchedItems.sort(sortRankedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rankedItem = _getHighestRanking.rankedItem,\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex,\n        _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n        keyThreshold = _getHighestRanking$ke === void 0 ? threshold : _getHighestRanking$ke;\n\n    if (rank >= keyThreshold) {\n      matches.push({\n        rankedItem: rankedItem,\n        item: item,\n        rank: rank,\n        index: index,\n        keyIndex: keyIndex\n      });\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedItem: item,\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedItem = _ref2.rankedItem,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedItem = rankedItem;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedItem = itemValue;\n    }\n\n    return {\n      rankedItem: newRankedItem,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank); // Lower casing before further comparison\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  } // starts with\n\n\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  } // word starts with\n\n\n  if (testString.indexOf(\" \" + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  } // is a part inside a cased string\n\n\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  } // is acronym for a cased string\n\n\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  } // contains\n\n\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\n\n\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\n\n\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n\n    default:\n      return false;\n  }\n}\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\n\n\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * (1 / spread);\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedItems(a, b) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRankedItem = a.rankedItem,\n      aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRankedItem = b.rankedItem,\n      bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      // localeCompare returns 0 if both values are equal,\n      // so we rely on JS engines stably sorting the results\n      // (de facto, all modern engine do this).\n      return String(aRankedItem).localeCompare(bRankedItem);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item); // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  } // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n\n\n  return value != null ? [].concat(value) : null;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n\n    return allVals;\n  }, []);\n}\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\n\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = {\n      key: key\n    };\n  }\n\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\nexport default matchSorter;\nexport { rankings };\n","// @flow\n\ndeclare var SC_DISABLE_SPEEDY: ?boolean;\ndeclare var __VERSION__: string;\n\nexport const SC_ATTR =\n  (typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY =\n  (typeof SC_DISABLE_SPEEDY === 'boolean' && SC_DISABLE_SPEEDY) ||\n  (typeof process !== 'undefined' &&\n    (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY)) ||\n  process.env.NODE_ENV !== 'production';\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport { makeStyleTag, getSheet } from './dom';\nimport type { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions): Tag => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule !== undefined && typeof rule.cssText === 'string') {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport class TextTag implements Tag {\n  element: HTMLStyleElement;\n\n  nodes: NodeList<Node>;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n    this.nodes = element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.nodes[index].textContent;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: HTMLElement) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n}\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport type { GroupedTag, Tag } from './types';\nimport { SPLITTER } from '../constants';\nimport throwStyledError from '../utils/error';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag): GroupedTag => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nclass DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n\n  length: number;\n\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number): number {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]): void {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throwStyledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number): void {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number): string {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n}\n","// @flow\n\nimport throwStyledError from '../utils/error';\n\nconst MAX_SMI = 1 << 31 - 1;\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return (groupIDRegister.get(id): any);\n  }\n\n  const group = nextFreeGroup++;\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    ((group | 0) < 0 || group > MAX_SMI)\n  ) {\n    throwStyledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  if (group >= nextFreeGroup) {\n    nextFreeGroup = group + 1;\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","// @flow\nimport { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport type { GroupedTag, Sheet, SheetOptions } from './types';\nimport { makeTag } from './Tag';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean,\n  useCSSOMInjection?: boolean,\n  target?: HTMLElement,\n};\n\ntype GlobalStylesAllocationMap = { [key: string]: number };\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n\n  names: NamesAllocationMap;\n\n  options: SheetOptions;\n\n  tag: void | GroupedTag;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = defaultOptions,\n    globalStyles?: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names);\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.options.isServer && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs) {\n    return new StyleSheet({ ...this.options, ...options }, this.gs, this.names);\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag(): GroupedTag {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id): any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id): any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id): any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n\n  /** Outputs the current sheet as a CSS string with markers for SSR */\n  toString(): string {\n    return outputSheet(this);\n  }\n}\n","// @flow\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\nimport type { RuleSet } from '../types';\n\nexport default function isStaticRules(rules: RuleSet): boolean {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","// @flow\n\nimport flatten from '../utils/flatten';\nimport { hash, phash } from '../utils/hash';\nimport generateName from '../utils/generateAlphabeticName';\nimport isStaticRules from '../utils/isStaticRules';\nimport StyleSheet from '../sheet';\n\nimport type { RuleSet, Stringifier } from '../types';\n\n/*\n ComponentStyle is all the CSS-specific stuff, not\n the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  staticRulesId: string;\n\n  constructor(rules: RuleSet, componentId: string) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic = process.env.NODE_ENV === 'production' && isStaticRules(rules);\n    this.componentId = componentId;\n    this.baseHash = hash(componentId);\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n  generateAndInjectStyles(executionContext: Object, styleSheet: StyleSheet, stylis: Stringifier) {\n    const { componentId } = this;\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {\n        return this.staticRulesId;\n      }\n\n      const cssStatic = flatten(this.rules, executionContext, styleSheet).join('');\n      const name = generateName(phash(this.baseHash, cssStatic.length) >>> 0);\n\n      if (!styleSheet.hasNameForId(componentId, name)) {\n        const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, componentId);\n\n        styleSheet.insertRules(componentId, name, cssStaticFormatted);\n      }\n\n      this.staticRulesId = name;\n\n      return name;\n    } else {\n      const { length } = this.rules;\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < length; i++) {\n        const partRule = this.rules[i];\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule + i);\n        } else {\n          const partChunk = flatten(partRule, executionContext, styleSheet);\n          const partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      const name = generateName(dynamicHash >>> 0);\n\n      if (!styleSheet.hasNameForId(componentId, name)) {\n        const cssFormatted = stylis(css, `.${name}`, undefined, componentId);\n        styleSheet.insertRules(componentId, name, cssFormatted);\n      }\n\n      return name;\n    }\n  }\n}\n","// @flow\nimport validAttr from '@emotion/is-prop-valid';\nimport React, {\n  createElement,\n  useContext,\n  useDebugValue,\n  type AbstractComponent,\n  type Ref,\n} from 'react';\nimport hoist from 'hoist-non-react-statics';\nimport merge from '../utils/mixinDeep';\nimport ComponentStyle from './ComponentStyle';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport determineTheme from '../utils/determineTheme';\nimport escape from '../utils/escape';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport getComponentName from '../utils/getComponentName';\nimport generateComponentId from '../utils/generateComponentId';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport joinStrings from '../utils/joinStrings';\nimport { ThemeContext } from './ThemeProvider';\nimport { useStyleSheet, useStylis } from './StyleSheetManager';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\n\nimport type { Attrs, RuleSet, Target } from '../types';\n\n/* global $Call */\n\nconst identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(displayName: string, parentComponentId: string) {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(name + identifiers[name])}`;\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useResolvedAttrs<Config>(theme: any = EMPTY_OBJECT, props: Config, attrs: Attrs) {\n  // NOTE: can't memoize this\n  // returns [context, resolvedAttrs]\n  // where resolvedAttrs is only the things injected by the attrs themselves\n  const context = { ...props, theme };\n  const resolvedAttrs = {};\n\n  attrs.forEach(attrDef => {\n    let resolvedAttrDef = attrDef;\n    let key;\n\n    if (isFunction(resolvedAttrDef)) {\n      resolvedAttrDef = resolvedAttrDef(context);\n    }\n\n    /* eslint-disable guard-for-in */\n    for (key in resolvedAttrDef) {\n      context[key] = resolvedAttrs[key] =\n        key === 'className'\n          ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])\n          : resolvedAttrDef[key];\n    }\n    /* eslint-enable guard-for-in */\n  });\n\n  return [context, resolvedAttrs];\n}\n\ninterface StyledComponentWrapperProperties {\n  attrs: Attrs;\n  componentStyle: ComponentStyle;\n  displayName: string;\n  foldedComponentIds: Array<string>;\n  target: Target;\n  shouldForwardProp: ?(prop: string, isValidAttr: (prop: string) => boolean) => boolean;\n  styledComponentId: string;\n  warnTooManyClasses: $Call<typeof createWarnTooManyClasses, string, string>;\n}\n\ntype StyledComponentWrapper<Config, Instance> = AbstractComponent<Config, Instance> &\n  StyledComponentWrapperProperties;\n\nfunction useInjectedStyle<T>(\n  componentStyle: ComponentStyle,\n  hasAttrs: boolean,\n  resolvedAttrs: T,\n  warnTooManyClasses?: $Call<typeof createWarnTooManyClasses, string, string>\n) {\n  const styleSheet = useStyleSheet();\n  const stylis = useStylis();\n\n  // statically styled-components don't need to build an execution context object,\n  // and shouldn't be increasing the number of class names\n  const isStatic = componentStyle.isStatic && !hasAttrs;\n\n  const className = isStatic\n    ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)\n    : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);\n\n  useDebugValue(className);\n\n  if (process.env.NODE_ENV !== 'production' && !isStatic && warnTooManyClasses) {\n    warnTooManyClasses(className);\n  }\n\n  return className;\n}\n\nfunction useStyledComponentImpl<Config: {}, Instance>(\n  forwardedComponent: StyledComponentWrapper<Config, Instance>,\n  props: Object,\n  forwardedRef: Ref<any>\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    // $FlowFixMe\n    defaultProps,\n    foldedComponentIds,\n    // $FlowFixMe\n    shouldForwardProp,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  useDebugValue(styledComponentId);\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, useContext(ThemeContext), defaultProps);\n\n  const [context, attrs] = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs);\n\n  const generatedClassName = useInjectedStyle(\n    componentStyle,\n    componentAttrs.length > 0,\n    context,\n    process.env.NODE_ENV !== 'production' ? forwardedComponent.warnTooManyClasses : undefined\n  );\n\n  const refToForward = forwardedRef;\n\n  const elementToBeCreated: Target = attrs.$as || props.$as || attrs.as || props.as || target;\n\n  const isTargetTag = isTag(elementToBeCreated);\n  const computedProps = attrs !== props ? { ...props, ...attrs } : props;\n  const propFilterFn = shouldForwardProp || (isTargetTag && validAttr);\n  const propsForElement = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in computedProps) {\n    if (key[0] === '$' || key === 'as') continue;\n    else if (key === 'forwardedAs') {\n      propsForElement.as = computedProps[key];\n    } else if (!propFilterFn || propFilterFn(key, validAttr)) {\n      // Don't pass through non HTML tags through to HTML elements\n      propsForElement[key] = computedProps[key];\n    }\n  }\n\n  if (props.style && attrs.style !== props.style) {\n    propsForElement.style = { ...props.style, ...attrs.style };\n  }\n\n  propsForElement.className = Array.prototype\n    .concat(\n      foldedComponentIds,\n      styledComponentId,\n      generatedClassName !== styledComponentId ? generatedClassName : null,\n      props.className,\n      attrs.className\n    )\n    .filter(Boolean)\n    .join(' ');\n\n  propsForElement.ref = refToForward;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nexport default function createStyledComponent(\n  target: Target | StyledComponentWrapper<*, *>,\n  options: Object,\n  rules: RuleSet\n) {\n  const isTargetStyledComp = isStyledComponent(target);\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    displayName = generateDisplayName(target),\n    componentId = generateId(options.displayName, options.parentComponentId),\n    attrs = EMPTY_ARRAY,\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    // $FlowFixMe\n    isTargetStyledComp && target.attrs\n      ? Array.prototype.concat(target.attrs, attrs).filter(Boolean)\n      : attrs;\n\n  // eslint-disable-next-line prefer-destructuring\n  let shouldForwardProp = options.shouldForwardProp;\n\n  // $FlowFixMe\n  if (isTargetStyledComp && target.shouldForwardProp) {\n    if (shouldForwardProp) {\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, filterFn) =>\n        // $FlowFixMe\n        target.shouldForwardProp(prop, filterFn) && options.shouldForwardProp(prop, filterFn);\n    } else {\n      // eslint-disable-next-line prefer-destructuring\n      shouldForwardProp = target.shouldForwardProp;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    isTargetStyledComp\n      ? // fold the underlying StyledComponent rules up (implicit extend)\n        // $FlowFixMe\n        target.componentStyle.rules.concat(rules)\n      : rules,\n    styledComponentId\n  );\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const forwardRef = (props, ref) => useStyledComponentImpl(WrappedStyledComponent, props, ref);\n\n  forwardRef.displayName = displayName;\n\n  // $FlowFixMe this is a forced cast to merge it StyledComponentWrapperProperties\n  WrappedStyledComponent = (React.forwardRef(forwardRef): StyledComponentWrapper<*, *>);\n\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? // $FlowFixMe\n      Array.prototype.concat(target.foldedComponentIds, target.styledComponentId)\n    : EMPTY_ARRAY;\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp\n    ? // $FlowFixMe\n      target.target\n    : target;\n\n  // $FlowFixMe\n  WrappedStyledComponent.withComponent = function withComponent(tag: Target) {\n    const { componentId: previousComponentId, ...optionsToCopy } = options;\n\n    const newComponentId =\n      previousComponentId &&\n      `${previousComponentId}-${isTag(tag) ? tag : escape(getComponentName(tag))}`;\n\n    const newOptions = {\n      ...optionsToCopy,\n      attrs: finalAttrs,\n      componentId: newComponentId,\n    };\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  // $FlowFixMe\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      // $FlowFixMe\n      this._foldedDefaultProps = isTargetStyledComp ? merge({}, target.defaultProps, obj) : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  // $FlowFixMe\n  WrappedStyledComponent.toString = () => `.${WrappedStyledComponent.styledComponentId}`;\n\n  if (isCompositeComponent) {\n    hoist(WrappedStyledComponent, (target: any), {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      shouldForwardProp: true,\n      self: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true,\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ value = '' }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return [...new Set(values).values()]\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width = columnResizing.columnWidths[header.id] || header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance({ plugins }) {\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n"],"sourceRoot":""}