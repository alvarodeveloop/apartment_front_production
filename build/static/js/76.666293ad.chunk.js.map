{"version":3,"sources":["components/input/InputComponentRef.jsx","pages/masters/PersonalEnterpriseFormPage.jsx"],"names":["InputFieldRef","React","forwardRef","props","ref","classFormGroup","cols","type","Group","className","required","Label","label","Control","id","name","onChange","handleChange","value","placeholder","readOnly","readonly","step","onKeyUp","handleKeyUp","disabled","Feedback","messageErrors","map","v","i","key","as","multiple","children","rows","PersonalEnterpriseFormPage","useState","validated","setValidated","enterprises","setEnterprises","charges","setCharges","rut","last_names","address","id_enterprise","id_charge","email","phone_1","phone_2","data","setData","inputRef","useRef","useEffect","fetchData","current","focus","promises","axios","get","API_URL","match","params","push","Promise","all","then","result","catch","err","response","toast","error","message","e","target","val","split","join","substring","length","gotBackToTable","history","replace","clearForm","sm","md","lg","xs","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","put","success","post","noValidate","inputRut","inputName","inputLastNames","inputAddress","inputEmail","inputPhone","inputPhone2","inputEnterprise","inputCharge","size","variant","block","onClick","defaultProps"],"mappings":"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","file":"static/js/76.666293ad.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          className={props.className ? props.className : ''}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, { useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PersonalEnterpriseFormPage = (props) => {\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const [enterprises, setEnterprises] = useState([])\r\n  const [charges, setCharges] = useState([])\r\n  const [data, setData] = useState({\r\n    name:'',\r\n    rut: '',\r\n    last_names: '',\r\n    address: '',\r\n    id_enterprise: '',\r\n    id_charge: '',\r\n    email: '',\r\n    phone_1: '',\r\n    phone_2: '',\r\n  })\r\n\r\n  const inputRef = useRef(null)\r\n  useEffect(() => {\r\n    fetchData()\r\n    inputRef.current.focus()\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = [\r\n      axios.get(API_URL+'enterprise'),\r\n      axios.get(API_URL+'master_charges'),\r\n    ]\r\n\r\n    if(props.match.params.id){\r\n      promises.push(\r\n        axios.get(API_URL+'personal_enterprise/'+props.match.params.id)\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(result => {\r\n\r\n      setEnterprises(result[0].data)\r\n      setCharges(result[1].data)\r\n\r\n      if(result[2]){\r\n\r\n        setData({\r\n          name: result[2].data.name,\r\n          rut: result[2].data.rut,\r\n          email: result[2].data.email,\r\n          last_names: result[2].data.last_names,\r\n          phone_1: result[2].data.phone_1,\r\n          phone_2: result[2].data.phone_2,\r\n          address: result[2].data.address,\r\n          id_charge: result[2].data.id_charge,\r\n          id_enterprise: result[2].data.id_enterprise,\r\n          id: result[2].data.id\r\n        })\r\n\r\n      }\r\n\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    if(e.target.name === 'rut'){\r\n      let val = e.target.value\r\n      val = val ? val.split('-').join('') : val\r\n      val = val ? val.substring(0,val.length -1) +'-'+val.substring(val.length -1) : val\r\n      setData({...data, [e.target.name]: val})\r\n    }else{\r\n      setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},data)\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'personal_enterprise/'+objectPost.id,objectPost).then(result => {\r\n        toast.success('Registro Modificado')\r\n        gotBackToTable()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'personal_enterprise',objectPost).then(result => {\r\n        toast.success('Registro Creado')\r\n        clearForm()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const gotBackToTable = () => {\r\n    props.history.replace('/masters/personal')\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name:'',\r\n      rut: '',\r\n      email: '',\r\n      phone_1: '',\r\n      phone_2: '',\r\n      address: '',\r\n      id_charge: '',\r\n      id_enterprise: '',\r\n      last_names: ''\r\n    })\r\n    setValidated(false)\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12} xs={12} className=\"text-right\">\r\n          <span className=\"text-danger\">*Campos Obligatorios</span>\r\n          <br/><br/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n            <Row>\r\n              <InputFieldRef\r\n                {...props.inputRut}\r\n                value={data.rut}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                {...props.inputName}\r\n                value={data.name}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputLastNames}\r\n                value={data.last_names}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputAddress}\r\n                value={data.address}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputEmail}\r\n                value={data.email}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPhone}\r\n                value={data.phone_1}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputPhone2}\r\n                value={data.phone_2}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputEnterprise}\r\n                value={data.id_enterprise}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {enterprises.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n              <InputField\r\n                {...props.inputCharge}\r\n                value={data.id_charge}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {charges.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" block={true}>Guardar</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"danger\" block={true} onClick={gotBackToTable}>Volver</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nPersonalEnterpriseFormPage.defaultProps = {\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputLastNames: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'last_names',\r\n    label : 'Apelidos',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputAddress: {\r\n    type: 'textarea',\r\n    required: true,\r\n    name: 'address',\r\n    label : 'Dirección',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: false,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*,',' Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_1',\r\n    label : 'Teléfono Principal',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone2: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_2',\r\n    label : 'Telefono Secundario',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputCharge: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_charge',\r\n    label : 'Cargo',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputEnterprise: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_enterprise',\r\n    label : 'Empresa',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n}\r\n\r\nexport default PersonalEnterpriseFormPage\r\n"],"sourceRoot":""}