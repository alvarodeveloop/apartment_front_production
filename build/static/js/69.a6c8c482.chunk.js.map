{"version":3,"sources":["pages/UserCreatePage.jsx"],"names":["UserCreatePage","props","useState","name","email","rut","password","id_rol","id_personal","userData","setUserData","modulesUser","setModulesUser","roles","setRoles","modules","setModules","validated","setValidated","isFormClean","setIsFormClean","isUpdate","setIsUpdate","personal","setPersonal","useEffect","promises","axios","get","API_URL","match","params","id","push","Promise","all","then","result","data","user","userModules","map","v","id_menu","catch","err","toast","error","fetchModules","onChange","e","target","val","value","split","join","substring","length","handleAccess","a","persist","checked","filter","goToListUser","history","replace","renderMenuNew","type","menu","setMenu","setTimeout","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","Object","assign","put","success","response","message","post","noValidate","sm","md","lg","xs","className","inputName","handleChange","inputEmail","inputRut","inputPassword","inputSelect","i","key","name_role","label","required","messageErrors","cols","last_names","size","variant","block","onClick","Group","forHtml","name_item","find","f","arreglo","defaultProps","connect"],"mappings":"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","file":"static/js/69.a6c8c482.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaCheckCircle, FaTrashAlt, FaPlusCircle,FaUsers } from \"react-icons/fa\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Container,\r\n} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { setMenu } from 'actions/menu'\r\nimport InputField from 'components/input/InputComponent'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport 'styles/pages/users.css'\r\nlet count = 0\r\n\r\nconst UserCreatePage  = props => {\r\n\r\n  const [userData,setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    rut: \"\",\r\n    password: \"\",\r\n    id_rol: \"\",\r\n    id_personal: \"\"\r\n  })\r\n  const [modulesUser,setModulesUser] = useState([])\r\n  const [roles,setRoles] = useState([])\r\n  const [modules,setModules] = useState([])\r\n  const [validated, setValidated] = useState(false);\r\n  const [isFormClean, setIsFormClean] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [personal, setPersonal] = useState([]);\r\n\r\n\r\n  const fetchModules = () => {\r\n\r\n    let promises = [\r\n      axios.get(API_URL+'modules'),\r\n      axios.get(API_URL+'roles'),\r\n      axios.get(API_URL+'personal_enterprise'),\r\n    ]\r\n\r\n    if(props.match.params.id > 0){\r\n      promises.push(\r\n        axios.get(API_URL+'user/'+props.match.params.id),\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(result => {\r\n      setModules(result[0].data)\r\n      setRoles(result[1].data)\r\n      setPersonal(result[2].data)\r\n      if(props.match.params.id){\r\n        setUserData({\r\n          name: result[3].data.user.name,\r\n          email: result[3].data.user.email,\r\n          rut: result[3].data.user.rut,\r\n          password: \"\",\r\n          id_rol: result[3].data.user.id_rol,\r\n          id_personal: result[3].data.user.id_personal,\r\n        })\r\n        const userModules = result[3].data.modules.map(v => v.id_menu)\r\n        setModulesUser(userModules)\r\n        setIsUpdate(true)\r\n      }\r\n    }).catch(err => {\r\n      toast.error('Error, contacte con soporte')\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchModules()\r\n  },[])\r\n\r\n  const onChange = e => {\r\n    if(e.target.name === 'rut'){\r\n      let val = e.target.value\r\n      val = val ? val.split('-').join('') : val\r\n      val = val ? val.substring(0,val.length -1) +'-'+val.substring(val.length -1) : val\r\n      setUserData({ ...userData, [e.target.name] : val })\r\n    }else{\r\n      setUserData({ ...userData, [e.target.name] : e.target.value })\r\n    }\r\n\r\n  }\r\n\r\n  const handleAccess = async (e,id) => {\r\n    e.persist()\r\n    if(e.target.checked){\r\n      await setModulesUser([...modulesUser,id])\r\n    }else{\r\n      setModulesUser(modulesUser.filter(v => v != e.target.value))\r\n    }\r\n  }\r\n\r\n  const addAllModules = () => {\r\n    let arreglo = modules.map(v => v.id)\r\n    setModulesUser(arreglo)\r\n  }\r\n\r\n  const removeAllModules = () => {\r\n    setModulesUser([])\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n    if(modulesUser.length === 0){\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      toast.error('Debe escoger al menos un módulo para el usuario')\r\n      return\r\n    }\r\n\r\n    let user = Object.assign({},userData,{\r\n      modules: modulesUser\r\n    })\r\n\r\n    if(!isUpdate){\r\n      if(!user.password){\r\n        toast.error('Debe escribir una contraseña')\r\n        return false\r\n      }\r\n    }\r\n\r\n    if(isUpdate){\r\n      axios.put(API_URL+'user/'+props.match.params.id,user).then(result => {\r\n        toast.success('Usuario Modificado')\r\n        renderMenuNew(true)\r\n      }).catch(err => {\r\n        const { response } = err\r\n        if(response){\r\n          toast.error(response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'user',user).then(result => {\r\n        toast.success('Usuario Registrado')\r\n        renderMenuNew(false)\r\n      }).catch(err => {\r\n        const { response } = err\r\n        if(response){\r\n          toast.error(response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const cleanForm = () => {\r\n    setUserData({\r\n      name: \"\",\r\n      email: \"\",\r\n      rut: \"\",\r\n      password: \"\",\r\n      id_rol: \"\"\r\n    })\r\n    setModulesUser([])\r\n    setValidated(false)\r\n    setIsFormClean(true)\r\n  }\r\n\r\n  const goToListUser = () => {\r\n    props.history.replace('/user/list')\r\n  }\r\n\r\n  const renderMenuNew = async type => {\r\n    const menu = await axios.get(API_URL+'menu_user')\r\n    props.setMenu(menu.data)\r\n    setTimeout(() => {\r\n      goToListUser()\r\n    },1000)\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <Form onSubmit={onSubmit} noValidate validated={validated}>\r\n        <Row>\r\n          <Col\r\n            sm={5} md={5} lg={5} xs={12} className=\"containerDivSeparated\">\r\n            <h3 className=\"text-center font-title\">Formulario</h3>\r\n            <br/>\r\n            <Row>\r\n              <InputField\r\n                { ...props.inputName}\r\n                handleChange={onChange}\r\n                value={userData.name}\r\n                />\r\n              <InputField\r\n                { ...props.inputEmail}\r\n                handleChange={onChange}\r\n                value={userData.email}\r\n                />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                { ...props.inputRut}\r\n                handleChange={onChange}\r\n                value={userData.rut}\r\n                />\r\n              <InputField\r\n                { ...props.inputPassword}\r\n                handleChange={onChange}\r\n                value={userData.password}\r\n                />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                { ...props.inputSelect}\r\n                handleChange={onChange}\r\n                value={userData.id_rol}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {roles.map((v,i) => (\r\n                  <option key={i} value={v.id}>{v.name_role}</option>\r\n                ))}\r\n              </InputField>\r\n              <InputField\r\n               type='select'\r\n               label='Personal Postventa'\r\n               name='id_personal'\r\n               required={true}\r\n               messageErrors={[\r\n               'Requerido*'\r\n               ]}\r\n               cols='col-md-6 col-lg-6 col-sm-6'\r\n               value={userData.id_personal}\r\n               handleChange={onChange}\r\n               >\r\n               <option value=\"\">--Seleccione--</option>\r\n               {personal.map((v,i) => (\r\n                 <option value={v.id} key={i}>{v.name+\" \"+v.last_names}</option>\r\n               ))}\r\n              </InputField>\r\n            </Row>\r\n            {isFormClean ? (\r\n              <Row>\r\n                <Col sm={6} md={6} lg={6} xs={6}>\r\n                  <Button size=\"sm\" type=\"button\" variant=\"primary\" block onClick={() => setIsFormClean(false)}>Registrar Otro <FaPlusCircle /></Button>\r\n                </Col>\r\n                <Col sm={6} md={6} lg={6} xs={6}>\r\n                  <Button size=\"sm\" type=\"button\" variant=\"warning\" block onClick={goToListUser}>Ir al listado <FaUsers /></Button>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12} xs={12} className=\"text-center\">\r\n                  <Button size=\"sm\" type=\"submit\" variant=\"secondary\" block>Enviar <FaPlusCircle /></Button>\r\n                    o\r\n                  <Button size=\"sm\" onClick={goToListUser} type=\"button\" variant=\"primary\" block>Ir al Listado</Button>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Col>\r\n          {isUpdate && (userData.id_rol == 5 || userData.id_rol == 6) ? '' : (\r\n            <Col sm={7} md={7} lg={7} xs={12} className=\"containerDivSeparated\">\r\n              <h3 className=\"text-center font-title\">Módulos</h3>\r\n              <Row>\r\n                {modules.map((v,i) => (\r\n                  <Col sm={4} md={4} lg={4} xs={6} key={i}>\r\n                    <Form.Group>\r\n                      <label forHtml={v.name_item+v.id}>\r\n                        <input type=\"checkbox\"\r\n                          id={v.name_item+v.id}\r\n                          value={v.id}\r\n                          checked={!!modulesUser.find(f => f == v.id)}\r\n                          onChange={(e) => handleAccess(e,v.id) }\r\n                          />\r\n                        <br/>\r\n                        {v.name_item}\r\n                      </label>\r\n                    </Form.Group>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                    <Row>\r\n                      <Col sm={6} md={6} lg={6} xs={12}>\r\n                        <Button size=\"sm\" variant=\"secondary\" block={true} onClick={addAllModules}>Seleccionar Todos <FaCheckCircle /></Button>\r\n                      </Col>\r\n                      <Col sm={6} md={6} lg={6} xs={12}>\r\n                        <Button size=\"sm\" variant=\"secondary\" block={true} onClick={removeAllModules}>Deseleccionar Todos <FaTrashAlt /></Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col sm={12} md={12} lg={12}>\r\n                        <br/>\r\n                        <p>Hacer click en el botón enviar para guardar los cambios</p>\r\n                      </Col>\r\n                    </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n    </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nUserCreatePage.defaultProps = {\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre Completo',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: true,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*, ','Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Documento Identidad',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputPassword: {\r\n    type: 'password',\r\n    required: false,\r\n    name: 'password',\r\n    label : 'Contraseña',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputSelect: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_rol',\r\n    label : 'Rol',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-12\"\r\n  },\r\n}\r\n\r\nUserCreatePage.propTypes = {\r\n  setMenu: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(){\r\n    return {\r\n      setMenu,\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps())(UserCreatePage)\r\n"],"sourceRoot":""}