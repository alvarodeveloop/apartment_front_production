{"version":3,"sources":["components/Table.jsx","components/input/InputComponentRef.jsx","pages/indicators/IndicatorConsolidateListingPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","displayPaginationUp","letrasChicas","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","iHeader","getHeaderGroupProps","headers","icolum","getHeaderProps","getSortByToggleProps","style","fontSize","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","icell","getCellProps","autoRemove","val","Table","InputFieldRef","forwardRef","props","ref","classFormGroup","cols","Group","required","Label","label","Control","name","handleChange","readOnly","readonly","step","onKeyUp","handleKeyUp","Feedback","messageErrors","v","as","multiple","children","IndicatorConsolidateListingPage","useState","id_housing_complexe","date_from","date_to","id_status","formData","setFormData","textButton","validated","setValidated","housingComplexes","setHousingComplexes","listingConsolidate","setListingConsolidate","statusSS","setStatusSS","showForm","setShowForm","showButtons","setShowButtons","useEffect","fetchData","promises","axios","get","API_URL","Promise","all","then","result","catch","err","response","toast","error","message","console","log","fluid","sm","md","lg","display","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","post","consolidate_listing","noValidate","status","block","colSpan","nivel","nombre","pendiente","ejecucion","no_aplica","cerrada","total","porcentaje","setTimeout","window","print"],"mappings":"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","file":"static/js/63.f8bba9f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .tr_cabecera{\r\n    background-color: rgb(218, 236, 242);\r\n    color: black;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, displayPaginationUp, letrasChicas }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {\r\n        displayPaginationUp ? (\r\n          <div className=\"pagination\">\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </Button>{' '}\r\n            <span>\r\n              Página{' '}\r\n              <strong>\r\n                {pageIndex + 1} de {pageOptions.length}\r\n              </strong>{' '}\r\n            </span>\r\n            <span className=\"ml-3\">\r\n              | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(page)\r\n                }}\r\n                className=\"inputPage\"\r\n                onChange={(e) => {\r\n                  if(e.target.value > pageOptions.length){\r\n                    e.target.value = 1\r\n                  }\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n              }}\r\n              className=\"inputPage\"\r\n            >\r\n              {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Mostrar {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : ''\r\n      }\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup,iHeader) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\" key={iHeader}>\r\n              {headerGroup.headers.map((column,icolum) => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"tr_cabecera\" style={{ fontSize: letrasChicas ? '14px' : '15px'}} key={icolum}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\" style={{ fontSize: letrasChicas ? '13px' : '15px' }}>\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()} key={i+'-'}>\r\n                  {row.cells.map((cell,icell) => {\r\n                    return <td {...cell.getCellProps()} key={icell+'td'}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,displayPaginationUp,letrasChicas}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} displayPaginationUp={displayPaginationUp} letrasChicas={letrasChicas} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  displayPaginationUp: PropTypes.bool,\r\n  letrasChicas: PropTypes.bool,\r\n}\r\n\r\nexport default Table\r\n","import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          className={props.className ? props.className : ''}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, {useState, useEffect, useMemo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport{\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  DropdownButton,\r\n  Dropdown\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport * as moment from 'moment-timezone'\r\nimport 'styles/pages/indicatorPage.css'\r\nimport { ARRAY_COLORS } from 'utils/constants'\r\n\r\nconst IndicatorConsolidateListingPage = (props) => {\r\n  const [formData,setFormData] = useState({\r\n    id_housing_complexe: '',\r\n    date_from : '',\r\n    date_to: '',\r\n    id_status : ''\r\n  })\r\n  const [textButton, setTextButton] = useState('Buscar...')\r\n  const [validated, setValidated] = useState(false)\r\n  const [housingComplexes, setHousingComplexes] = useState([])\r\n  const [listingConsolidate, setListingConsolidate] = useState([])\r\n  const [statusSS, setStatusSS] = useState([])\r\n  const [showForm,setShowForm] = useState(true)\r\n  const [showButtons,setShowButtons] = useState(true)\r\n\r\n  useEffect(() => {\r\n    \r\n    fetchData()\r\n\r\n  },[])\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    let promises = [\r\n      axios.get(API_URL+'housing_complexe'),\r\n      axios.get(API_URL+'get_status_close')\r\n    ]\r\n\r\n    Promise.all(promises).then(result => {\r\n      setHousingComplexes(result[0].data)\r\n      setStatusSS(result[1].data)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    setFormData({...formData, [e.target.name] : e.target.value})\r\n  }\r\n\r\n  const onSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},formData)\r\n\r\n    axios.post(API_URL+'indicators_listing_consolidate',objectPost).then(result => {\r\n      setListingConsolidate(result.data.consolidate_listing)\r\n      console.log(result.data.consolidate_listing,'aui');\r\n      setShowForm(false)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  const displayStatus = () => {\r\n    let val = \"Todos los estados\"\r\n    switch (parseInt(formData.id_status,10)) {\r\n      case 1:\r\n        val = \"Pendiente\"\r\n      break;\r\n      case 2:\r\n        val = \"Inspección\"\r\n      break;\r\n      case 3:\r\n        val = \"Ejecución\"\r\n      break;\r\n      case 4:\r\n        val = \"No Aplica\"\r\n      break;\r\n      case 5:\r\n        val = \"Cerrada\"\r\n      break;\r\n      case 6:\r\n        val = \"Anulada\"\r\n      break;\r\n      case 7:\r\n        val = \"En proceso\"\r\n      break;\r\n    }\r\n\r\n    return val\r\n  }\r\n\r\n  const show_total_registers = (dataRegisters,type = false) => {\r\n    let val = 0\r\n    if(!type){\r\n      dataRegisters.forEach((item, i) => {\r\n        val = val + item.total\r\n      });\r\n      return val\r\n    }else{\r\n      switch (type) {\r\n        case \"pendiente\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_pendiente\r\n          });\r\n        break;\r\n        case \"ejecucion\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_ejecucion\r\n          });\r\n        break\r\n        case \"no_aplica\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_no_aplica\r\n          });\r\n        break\r\n        case \"Cerrada\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_cerrada\r\n          });\r\n        break\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  const handleShowForm = () => {\r\n    setShowForm(true)\r\n  }\r\n\r\n  const printIndicator = () => {\r\n    setShowButtons(false)\r\n    setTimeout(function () {\r\n      window.print()\r\n    }, 400);\r\n    setTimeout(function () {\r\n      setShowButtons(true)\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"text-center title_principal\">INDICADORES DE POSTVENTA (Listado de Consolidado)</h4>\r\n        </Col>\r\n        {/* formulario ==================== */}\r\n        <Col sm={12} md={12} lg={12} style={{display: showForm ? \"block\" : \"none\"}}>\r\n         <Form onSubmit={onSubmit} noValidate validated={validated}>\r\n          <Row>\r\n            <InputFieldRef\r\n              type=\"select\"\r\n              name=\"id_housing_complexe\"\r\n              label=\"Proyecto\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.id_housing_complexe}\r\n              handleChange={onChange}\r\n            >\r\n              <option value=\"\">--Seleccione--</option>\r\n              {housingComplexes.map((v,i) => (\r\n                <option value={v.id} key={i}>{v.name}</option>\r\n              ))}\r\n            </InputFieldRef>\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"date_from\"\r\n              label=\"Desde\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.date_from}\r\n              handleChange={onChange}\r\n            />\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"date_to\"\r\n              label=\"Hasta\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.date_to}\r\n              handleChange={onChange}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <InputField\r\n              type=\"select\"\r\n              name=\"id_status\"\r\n              label=\"Status\"\r\n              required={false}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                ''\r\n              ]}\r\n              value={formData.id_status}\r\n              handleChange={onChange}\r\n            >\r\n              <option value=\"\">--Seleccione--</option>\r\n              {statusSS.map((v,i) => (\r\n                <option key={i} value={v.id}>{v.status}</option>\r\n              ))}\r\n            </InputField>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Button variant=\"secondary\" block={true} size=\"sm\" type=\"submit\">{textButton}</Button>\r\n            </Col>\r\n          </Row>\r\n         </Form>\r\n        </Col>\r\n        {/* Fin col 12 del formulario ==================== */}\r\n        <Col sm={12} md={12} lg={12} style={{display : showForm ? \"none\" : \"block\"}}>\r\n        {/* tabla fallas tipologia y estatus ================== */}\r\n          <br/>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={12} md={12} lg={12}>\r\n              <table className=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"8\">Fallas por Estado</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Nombre</th>\r\n                    <th className=\"th_class\">Tipo</th>\r\n                    <th className=\"th_class\">Pendiente</th>\r\n                    <th className=\"th_class\">Inspeccion</th>\r\n                    <th className=\"th_class\">Ejecución</th>\r\n                    <th className=\"th_class\">Cerrada</th>\r\n                    <th className=\"th_class\">Total</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {listingConsolidate.map((v,i) => {\r\n                    return (\r\n                      <tr key={i} className={v.nivel == 1 ? \"tr_principal\" : \"\"}>\r\n                        <td className=\"\">{v.nombre}</td>\r\n                        <td className=\"\">{v.nivel == 1 ? \"Tipologia\" : \"Falla Puntual\"}</td>\r\n                        <td className=\"text-right\">{v.pendiente}</td>\r\n                        <td className=\"text-right\">{v.ejecucion}</td>\r\n                        <td className=\"text-right\">{v.no_aplica}</td>\r\n                        <td className=\"text-right\">{v.cerrada}</td>\r\n                        <td className=\"text-right\">{v.total}</td>\r\n                        <td className=\"text-right\">{v.porcentaje}%</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          {/* fin tabla tipology failure by status too */}\r\n          {\r\n            showButtons ? (\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"secondary\" size=\"sm\" block={true} onClick={printIndicator}>Imprimir Pdf</Button>\r\n\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"secondary\" size=\"sm\" block={true} onClick={handleShowForm}>Nueva Consulta</Button>\r\n                </Col>\r\n              </Row>\r\n            ) : ''\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndicatorConsolidateListingPage\r\n"],"sourceRoot":""}