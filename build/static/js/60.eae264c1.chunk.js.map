{"version":3,"sources":["components/Table.jsx","pages/indicators/IndicatorByProyectPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","displayPaginationUp","letrasChicas","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","iHeader","getHeaderGroupProps","headers","icolum","getHeaderProps","getSortByToggleProps","style","fontSize","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","icell","getCellProps","autoRemove","val","Table","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","data_donut_ss_status","labels","datasets","backgroundColor","hoverBackgroundColor","data_bar_failure_tipology","label","borderColor","borderWidth","hoverBorderColor","IndicatorByProyectPage","props","useState","id_housing_complexe","date_from","date_to","id_status","formData","setFormData","textButton","validated","setValidated","housingComplexes","setHousingComplexes","housingData","setHousingData","ssByStatus","setSsByStatus","failureByTipology","setFailureByTipology","failureByTipologyStatus","setFailureByTipologyStatus","redraw","setRedraw","redrawBar","setRedrawBar","statusSS","setStatusSS","showForm","setShowForm","showButtons","setShowButtons","useEffect","fetchData","handleDataDonutSsStatus","handleBarFailuresByTipology","promises","axios","get","API_URL","Promise","all","then","result","catch","err","response","toast","error","message","console","log","forEach","v","push","status","parseFloat","porcentaje","ARRAY_COLORS","name","total","show_total_registers","dataRegisters","item","total_pendiente","total_ejecucion","total_no_aplica","total_cerrada","fluid","sm","md","lg","display","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","post","housing_data","ss_status","failure_by_tipology","failure_by_tipology_status","setTimeout","noValidate","required","cols","messageErrors","handleChange","block","moment","date_municipal_reception","format","number_living","parseInt","displayStatus","colSpan","options","v1","window","print"],"mappings":"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","file":"static/js/60.eae264c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .tr_cabecera{\r\n    background-color: rgb(218, 236, 242);\r\n    color: black;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, displayPaginationUp, letrasChicas }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {\r\n        displayPaginationUp ? (\r\n          <div className=\"pagination\">\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </Button>{' '}\r\n            <span>\r\n              Página{' '}\r\n              <strong>\r\n                {pageIndex + 1} de {pageOptions.length}\r\n              </strong>{' '}\r\n            </span>\r\n            <span className=\"ml-3\">\r\n              | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(page)\r\n                }}\r\n                className=\"inputPage\"\r\n                onChange={(e) => {\r\n                  if(e.target.value > pageOptions.length){\r\n                    e.target.value = 1\r\n                  }\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n              }}\r\n              className=\"inputPage\"\r\n            >\r\n              {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Mostrar {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : ''\r\n      }\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup,iHeader) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\" key={iHeader}>\r\n              {headerGroup.headers.map((column,icolum) => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"tr_cabecera\" style={{ fontSize: letrasChicas ? '14px' : '15px'}} key={icolum}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\" style={{ fontSize: letrasChicas ? '13px' : '15px' }}>\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()} key={i+'-'}>\r\n                  {row.cells.map((cell,icell) => {\r\n                    return <td {...cell.getCellProps()} key={icell+'td'}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,displayPaginationUp,letrasChicas}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} displayPaginationUp={displayPaginationUp} letrasChicas={letrasChicas} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  displayPaginationUp: PropTypes.bool,\r\n  letrasChicas: PropTypes.bool,\r\n}\r\n\r\nexport default Table\r\n","import React, {useState, useEffect, useMemo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport{\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  DropdownButton,\r\n  Dropdown\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport * as moment from 'moment-timezone'\r\nimport 'styles/pages/indicatorPage.css'\r\nimport {Doughnut,Bar} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS } from 'utils/constants'\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nlet total_estado_ss = 0\r\nlet total_failure_by_tipology  = 0\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_bar_failure_tipology = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Fallas(Observaciones) por Tipología',\r\n      backgroundColor: 'rgb(63, 27, 184)',\r\n      borderColor: 'rgb(27, 13, 74)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgb(63, 27, 184)',\r\n      hoverBorderColor: 'rgb(27, 13, 74)',\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nconst IndicatorByProyectPage = (props) => {\r\n  const [formData,setFormData] = useState({\r\n    id_housing_complexe: '',\r\n    date_from : '',\r\n    date_to: '',\r\n    id_status : ''\r\n  })\r\n  const [textButton, setTextButton] = useState('Buscar...')\r\n  const [validated, setValidated] = useState(false)\r\n  const [housingComplexes, setHousingComplexes] = useState([])\r\n  const [housingData, setHousingData] = useState({})\r\n  const [ssByStatus, setSsByStatus] = useState([])\r\n  const [failureByTipology, setFailureByTipology] = useState([])\r\n  const [failureByTipologyStatus, setFailureByTipologyStatus] = useState([])\r\n  const [redraw,setRedraw] = useState(false)\r\n  const [redrawBar,setRedrawBar] = useState(false)\r\n  const [statusSS, setStatusSS] = useState([])\r\n  const [showForm,setShowForm] = useState(true)\r\n  const [showButtons,setShowButtons] = useState(true)\r\n\r\n  useEffect(() => {\r\n    \r\n    fetchData()\r\n    return () => {\r\n\r\n      data_donut_ss_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      data_bar_failure_tipology = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Fallas(Observaciones) por Tipología',\r\n            backgroundColor: 'rgb(63, 27, 184)',\r\n            borderColor: 'rgb(27, 13, 74)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgb(63, 27, 184)',\r\n            hoverBorderColor: 'rgb(27, 13, 74)',\r\n            data: []\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(redraw){\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[redraw])\r\n\r\n  useEffect(() => {\r\n    if(redrawBar){\r\n      handleBarFailuresByTipology()\r\n    }\r\n  },[redrawBar])\r\n\r\n\r\n  const fetchData = () => {\r\n\r\n    let promises = [\r\n      axios.get(API_URL+'housing_complexe'),\r\n      axios.get(API_URL+'get_status_close')\r\n    ]\r\n\r\n    Promise.all(promises).then(result => {\r\n      setHousingComplexes(result[0].data)\r\n      setStatusSS(result[1].data)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    ssByStatus.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.status+\"%\")\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.porcentaje))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const handleBarFailuresByTipology = () => {\r\n\r\n    failureByTipology.forEach((v, i) => {\r\n      data_bar_failure_tipology.labels.push(v.name)\r\n      data_bar_failure_tipology.datasets[0].data.push(v.total)\r\n    });\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    setFormData({...formData, [e.target.name] : e.target.value})\r\n  }\r\n\r\n  const onSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},formData)\r\n\r\n    axios.post(API_URL+'indicators_by_proyect',objectPost).then(result => {\r\n      setHousingData(result.data.housing_data)\r\n      setSsByStatus(result.data.ss_status)\r\n      setFailureByTipology(result.data.failure_by_tipology)\r\n      setFailureByTipologyStatus(result.data.failure_by_tipology_status)\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n        setRedrawBar(true)\r\n        setShowForm(false)\r\n      }, 500);\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  const displayStatus = () => {\r\n    let val = \"Todos los estados\"\r\n    switch (parseInt(formData.id_status,10)) {\r\n      case 1:\r\n        val = \"Pendiente\"\r\n      break;\r\n      case 2:\r\n        val = \"Inspección\"\r\n      break;\r\n      case 3:\r\n        val = \"Ejecución\"\r\n      break;\r\n      case 4:\r\n        val = \"No Aplica\"\r\n      break;\r\n      case 5:\r\n        val = \"Cerrada\"\r\n      break;\r\n      case 6:\r\n        val = \"Anulada\"\r\n      break;\r\n      case 7:\r\n        val = \"En proceso\"\r\n      break;\r\n    }\r\n\r\n    return val\r\n  }\r\n\r\n  const show_total_registers = (dataRegisters,type = false) => {\r\n    let val = 0\r\n    if(!type){\r\n      dataRegisters.forEach((item, i) => {\r\n        val = val + item.total\r\n      });\r\n      return val\r\n    }else{\r\n      switch (type) {\r\n        case \"pendiente\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_pendiente\r\n          });\r\n        break;\r\n        case \"ejecucion\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_ejecucion\r\n          });\r\n        break\r\n        case \"no_aplica\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_no_aplica\r\n          });\r\n        break\r\n        case \"Cerrada\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_cerrada\r\n          });\r\n        break\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  const handleShowForm = () => {\r\n\r\n    data_donut_ss_status = {\r\n      labels: [],\r\n      datasets: [{\r\n        data: [],\r\n        backgroundColor: [],\r\n        hoverBackgroundColor: []\r\n      }]\r\n    };\r\n\r\n    data_bar_failure_tipology = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: 'Fallas(Observaciones) por Tipología',\r\n          backgroundColor: 'rgb(63, 27, 184)',\r\n          borderColor: 'rgb(27, 13, 74)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgb(63, 27, 184)',\r\n          hoverBorderColor: 'rgb(27, 13, 74)',\r\n          data: []\r\n        }\r\n      ]\r\n    };\r\n    setShowForm(true)\r\n    setRedraw(false)\r\n    setRedrawBar(false)\r\n  }\r\n\r\n  const printIndicator = () => {\r\n    setShowButtons(false)\r\n    setTimeout(function () {\r\n      window.print()\r\n    }, 400);\r\n    setTimeout(function () {\r\n      setShowButtons(true)\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"text-center title_principal\">INDICADORES DE POSTVENTA (Por Proyecto y Rango de Fecha)</h4>\r\n        </Col>\r\n        {/* formulario ==================== */}\r\n        <Col sm={12} md={12} lg={12} style={{display: showForm ? \"block\" : \"none\"}}>\r\n         <Form onSubmit={onSubmit} noValidate validated={validated}>\r\n          <Row>\r\n            <InputFieldRef\r\n              type=\"select\"\r\n              name=\"id_housing_complexe\"\r\n              label=\"Proyecto\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.id_housing_complexe}\r\n              handleChange={onChange}\r\n            >\r\n              <option value=\"\">--Seleccione--</option>\r\n              {housingComplexes.map((v,i) => (\r\n                <option value={v.id} key={i}>{v.name}</option>\r\n              ))}\r\n            </InputFieldRef>\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"date_from\"\r\n              label=\"Desde\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.date_from}\r\n              handleChange={onChange}\r\n            />\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"date_to\"\r\n              label=\"Hasta\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.date_to}\r\n              handleChange={onChange}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <InputField\r\n              type=\"select\"\r\n              name=\"id_status\"\r\n              label=\"Status\"\r\n              required={false}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                ''\r\n              ]}\r\n              value={formData.id_status}\r\n              handleChange={onChange}\r\n            >\r\n              <option value=\"\">--Seleccione--</option>\r\n              {statusSS.map((v,i) => (\r\n                <option key={i} value={v.id}>{v.status}</option>\r\n              ))}\r\n            </InputField>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Button variant=\"secondary\" block={true} size=\"sm\" type=\"submit\">{textButton}</Button>\r\n            </Col>\r\n          </Row>\r\n         </Form>\r\n        </Col>\r\n        {/* Fin col 12 del formulario ==================== */}\r\n        <Col sm={12} md={12} lg={12} style={{display : showForm ? \"none\" : \"block\"}}>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <b>Proyecto Inmobiliario:&nbsp;&nbsp;</b> {housingData.name}\r\n                </Col>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <b>Fecha Recepción Mun.:&nbsp;&nbsp;</b>{moment(housingData.date_municipal_reception).format('DD-MM-YYYY')}\r\n                </Col>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <b>Nro. Viviendas:&nbsp;&nbsp;</b> {housingData.number_living}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>Estado:&nbsp;&nbsp;</b> {displayStatus()}\r\n              </Col>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>Fecha Inicio:&nbsp;&nbsp;</b>{moment(formData.date_from).format('DD-MM-YYYY')}\r\n              </Col>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>Fecha Término:&nbsp;&nbsp;</b>{moment(formData.date_to).format('DD-MM-YYYY')}\r\n              </Col>\r\n            </Col>\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>IPS: </b> 0\r\n              </Col>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>IPC: </b> 0\r\n              </Col>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>IPE: </b> 0\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          {/* Tabla ss estado ============================= */}\r\n          <br/>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"3\">Solicitudes por Estado</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Estados</th>\r\n                    <th className=\"th_class\">Cantidad</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {ssByStatus.map((v,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v.status}</td>\r\n                        <td className=\"text-right\">{v.total}</td>\r\n                        <td className=\"text-right\">{v.porcentaje}%</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td><b>Total</b></td>\r\n                    <td className=\"text-right\">{show_total_registers(ssByStatus)}</td>\r\n                    <td className=\"text-right\"><b>100.00%</b></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <Doughnut data={data_donut_ss_status} redraw={redraw} options={optionsBar}/>\r\n            </Col>\r\n          </Row>\r\n          {/* Tabla failure by tipology ============================= */}\r\n          <br/>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"3\">Total de Fallas(Observaciones) por Tipología</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Fallas</th>\r\n                    <th className=\"th_class\">Cantidad</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {failureByTipology.map((v1,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v1.name}</td>\r\n                        <td className=\"text-right\">{v1.total}</td>\r\n                        <td className=\"text-right\">{v1.porcentaje}%</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td><b>Total</b></td>\r\n                    <td className=\"text-right\">{show_total_registers(failureByTipology)}</td>\r\n                    <td className=\"text-right\"><b>100.00%</b></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <Bar\r\n                data={data_bar_failure_tipology}\r\n                options={optionsBar}\r\n                redraw={redraw}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        {/* tabla fallas tipologia y estatus ================== */}\r\n          <br/>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={12} md={12} lg={12}>\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"7\">Total de Fallas(Observaciones) por Tipología y Estado</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Fallas</th>\r\n                    <th className=\"th_class\">Pendiente</th>\r\n                    <th className=\"th_class\">Ejecución</th>\r\n                    <th className=\"th_class\">No Aplica</th>\r\n                    <th className=\"th_class\">Cerrada</th>\r\n                    <th className=\"th_class\">Total</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {failureByTipologyStatus.map((v1,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v1.name}</td>\r\n                        <td className=\"text-right\">{v1.total_pendiente}</td>\r\n                        <td className=\"text-right\">{v1.total_ejecucion}</td>\r\n                        <td className=\"text-right\">{v1.total_no_aplica}</td>\r\n                        <td className=\"text-right\">{v1.total_cerrada}</td>\r\n                        <td className=\"text-right\">{v1.total}</td>\r\n                        <td className=\"text-right\">{v1.porcentaje}%</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td><b>Total</b></td>\r\n                    <td className=\"text-right\">{show_total_registers(failureByTipologyStatus,'pendiente')}</td>\r\n                    <td className=\"text-right\">{show_total_registers(failureByTipologyStatus,'ejecucion')}</td>\r\n                    <td className=\"text-right\">{show_total_registers(failureByTipologyStatus,'no_aplica')}</td>\r\n                    <td className=\"text-right\">{show_total_registers(failureByTipologyStatus,'cerrada')}</td>\r\n                    <td className=\"text-right\">{show_total_registers(failureByTipologyStatus)}</td>\r\n                    <td className=\"text-right\"><b>100.00%</b></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          {/* fin tabla tipology failure by status too */}\r\n          {\r\n            showButtons ? (\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"secondary\" size=\"sm\" block={true} onClick={printIndicator}>Imprimir Pdf</Button>\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"secondary\" size=\"sm\" block={true} onClick={handleShowForm}>Nueva Consulta</Button>\r\n                </Col>\r\n              </Row>\r\n            ) : ''\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndicatorByProyectPage\r\n"],"sourceRoot":""}