{"version":3,"sources":["assets/img/users/cap1.png","assets/img/bg/background_1920-2.jpg","utils/propTypes.js","components/Avatar.js","components/Card/UserCard.js","components/Card/AnnouncementCard.js","components/Todos.js","components/Card/TodosCard.js","utils/bemnames.js","components/Typography.js","components/Page.js","pages/DashboardPage.js"],"names":["module","exports","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","Avatar","rounded","circle","src","size","Tag","tag","className","style","restProps","classes","classNames","width","height","defaultProps","userImage","UserCard","avatar","avatarSize","title","subtitle","text","children","Card","inverse","CardBody","CardTitle","CardSubtitle","CardText","AnnouncementCard","color","header","name","buttonProps","bgColor","CardHeader","Button","Todos","arrayOf","shape","id","done","bool","todos","ListGroup","flush","map","ListGroupItem","key","FormGroup","check","Label","Input","type","checked","readOnly","block","TodosCard","image","CardImg","CardImgOverlay","opacity","backgroundImage","namespace","bemNames","create","blockName","b","more","e","m","tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","bem","bn","Page","breadcrumbs","Breadcrumb","BreadcrumbItem","length","index","active","DashboardPage","props","Container","fluid","Row","Col","sm","md","lg","Header","backgroundColor","Body","Accordion","Toggle","as","eventKey","Collapse"],"mappings":"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","file":"static/js/61.210c5e9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cap1.dc8b1732.png\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-2.c54eef50.jpg\";","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  ...PropTypes,\r\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport userImage from 'assets/img/users/cap1.png';\r\n\r\nconst Avatar = ({\r\n  rounded,\r\n  circle,\r\n  src,\r\n  size,\r\n  tag: Tag,\r\n  className,\r\n  style,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames({ 'rounded-circle': circle, rounded }, className);\r\n  return (\r\n    <Tag\r\n      src={src}\r\n      style={{ width: size, height: size, ...style }}\r\n      className={classes}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nAvatar.propTypes = {\r\n  tag: PropTypes.component,\r\n  rounded: PropTypes.bool,\r\n  circle: PropTypes.bool,\r\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  src: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nAvatar.defaultProps = {\r\n  tag: 'img',\r\n  rounded: false,\r\n  circle: true,\r\n  size: 40,\r\n  src: userImage,\r\n  style: {},\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardTitle, CardSubtitle, CardText, CardBody } from 'reactstrap';\r\n\r\nimport Avatar from '../Avatar';\r\n\r\nconst UserCard = ({\r\n  avatar,\r\n  avatarSize,\r\n  title,\r\n  subtitle,\r\n  text,\r\n  children,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('bg-gradient-theme', className);\r\n\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      <CardBody className=\"d-flex justify-content-center align-items-center flex-column\">\r\n        <Avatar src={avatar} size={avatarSize} className=\"mb-2\" />\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardSubtitle>{subtitle}</CardSubtitle>\r\n        <CardText>\r\n          <small>{text}</small>\r\n        </CardText>\r\n      </CardBody>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  avatar: PropTypes.string,\r\n  avatarSize: PropTypes.number,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  text: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nUserCard.defaultProps = {\r\n  avatarSize: 80,\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardHeader, CardBody, CardText, Button } from 'reactstrap';\r\n\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport classNames from 'classnames';\r\n\r\nconst AnnouncementCard = ({\r\n  color,\r\n  header,\r\n  avatar,\r\n  avatarSize,\r\n  name,\r\n  date,\r\n  text,\r\n  className,\r\n  buttonProps,\r\n  ...restProps\r\n}) => {\r\n  const bgColor = `bg-${color}`;\r\n  const classes = classNames(bgColor, className);\r\n\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      {header && typeof header === 'string' ? (\r\n        <CardHeader className={bgColor}>{header}</CardHeader>\r\n      ) : (\r\n        header\r\n      )}\r\n      <CardBody className=\"d-flex flex-wrap flex-column align-items-center justify-content-center\">\r\n        <Avatar size={avatarSize} src={avatar} />\r\n        <CardText className=\"text-center\">\r\n          <strong className=\"d-block\">{name}</strong>\r\n          <small className=\"text-muted\">{date}</small>\r\n        </CardText>\r\n        <CardText className=\"text-center\">{text}</CardText>\r\n\r\n        <Button color=\"primary\" {...buttonProps} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAnnouncementCard.propTypes = {\r\n  color: PropTypes.string,\r\n  header: PropTypes.node,\r\n  avatar: PropTypes.string,\r\n  avatarSize: PropTypes.number,\r\n  name: PropTypes.string,\r\n  date: PropTypes.date,\r\n  className: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nAnnouncementCard.defaultProps = {\r\n  color: 'gradient-secondary',\r\n  avatarSize: 60,\r\n};\r\n\r\nexport default AnnouncementCard;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nexport const propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.ID,\r\n      title: PropTypes.string,\r\n      done: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nconst Todos = ({ todos, ...restProps }) => {\r\n  return (\r\n    <ListGroup flush {...restProps}>\r\n      {todos.map(({ id, title, done } = {}) => (\r\n        <ListGroupItem key={id} className=\"border-0\">\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"checkbox\" checked={done} readOnly />\r\n              {done ? <strike>{title}</strike> : <span>{title}</span>}\r\n            </Label>\r\n          </FormGroup>\r\n        </ListGroupItem>\r\n      ))}\r\n      <Button block>Add</Button>\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nTodos.propTypes = propTypes;\r\n\r\nTodos.defaultProps = {\r\n  todos: [],\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport Todos, { propTypes as TodosPropTypes } from 'components/Todos';\r\n\r\nimport backgroundImage from 'assets/img/bg/background_1920-2.jpg';\r\n\r\nconst TodosCard = ({ image, title, subtitle, todos, ...restProps }) => {\r\n  return (\r\n    <Card {...restProps}>\r\n      <div className=\"position-relative\">\r\n        <CardImg src={image} />\r\n        <CardImgOverlay className=\"bg-dark\" style={{ opacity: 0.2 }}>\r\n          <CardTitle className=\"text-white\">{title}</CardTitle>\r\n          <CardText className=\"text-white\">{subtitle}</CardText>\r\n        </CardImgOverlay>\r\n      </div>\r\n      <Todos todos={todos} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nTodosCard.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  todos: TodosPropTypes.todos,\r\n};\r\n\r\nTodosCard.defaultProps = {\r\n  image: backgroundImage,\r\n  title: 'Tasks',\r\n  subtitle: 'Due soon...',\r\n};\r\n\r\nexport default TodosCard;\r\n","import classNames from 'classnames';\r\n\r\nexport const createBEM = namespace => {\r\n  return {\r\n    create: blockName => {\r\n      let block = blockName;\r\n\r\n      if (typeof namespace === 'string') {\r\n        block = `${namespace}-${blockName}`;\r\n      }\r\n\r\n      return {\r\n        b: (...more) => {\r\n          return classNames(block, more);\r\n        },\r\n        e: (className, ...more) => {\r\n          return classNames(`${block}__${className}`, more);\r\n        },\r\n        m: (className, ...more) => {\r\n          return classNames(`${block}--${className}`, more);\r\n        },\r\n      };\r\n    },\r\n  };\r\n};\r\n\r\nexport const bemNames = createBEM('cr');\r\n\r\nexport default bemNames;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import { AnnouncementCard, TodosCard } from 'components/Card';\r\nimport Page from 'components/Page';\r\nimport React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Accordion\r\n} from 'react-bootstrap'\r\nimport 'styles/pages/dashboard.css'\r\n\r\nconst DashboardPage = props => {\r\n\r\n  const redirectRoute = route => {\r\n    props.history.replace(route)\r\n  }\r\n\r\n    return (\r\n      <Page\r\n        className=\"DashboardPage\"\r\n        title=\"Escritorio\"\r\n        breadcrumbs={[{ name: 'Escritorio', active: true }]}\r\n      >\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <Card>\r\n                <Card.Header style={{ backgroundColor: 'lightgray', color: 'black'}}>\r\n                  S.S Abiertas por mas de 5 días\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h5 className=\"alert alert-warning text-center\">No se encontraron Registros</h5>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <Card>\r\n                <Card.Header style={{ backgroundColor: 'lightgray', color: 'black'}}>\r\n                  S.S. del dia para Constructora.\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h5 className=\"alert alert-warning text-center\">No se encontraron Registros</h5>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <br/>\r\n              <Card className=\"accordeon_dashboard\">\r\n                <Card.Header style={{ backgroundColor: 'lightgray', color: 'black'}}>\r\n                  Propidades con primera Garantía vencida (Inscripción a Conservador).\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Accordion className=\"separated_borders\">\r\n                    <Card>\r\n                      <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{ backgroundColor: 'rgb(24, 20, 101)', color: 'white'}}>\r\n                        Condominio1: 0\r\n                      </Accordion.Toggle>\r\n                      <Accordion.Collapse className=\"separated_borders_accordeon\" eventKey=\"0\">\r\n                        <h5 className=\"text-center\">No se encontraron registros</h5>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                      <Accordion.Toggle as={Card.Header} eventKey=\"1\" style={{ backgroundColor: 'rgb(24, 20, 101)', color: 'white'}}>\r\n                        Condominio2: 0\r\n                      </Accordion.Toggle>\r\n                      <Accordion.Collapse className=\"\" eventKey=\"1\">\r\n                        <Card.Body>\r\n                          <h5 className=\"text-center\">No se encontraron registros</h5>\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                      <Accordion.Toggle as={Card.Header} eventKey=\"2\" style={{ backgroundColor: 'rgb(24, 20, 101)', color: 'white'}}>\r\n                        Condominio3: 0\r\n                      </Accordion.Toggle>\r\n                      <Accordion.Collapse className=\"separated_borders_accordeon\" eventKey=\"2\">\r\n                        <h5 className=\"text-center\">No se encontraron registros</h5>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                      <Accordion.Toggle as={Card.Header} eventKey=\"4\" style={{ backgroundColor: 'rgb(24, 20, 101)', color: 'white'}}>\r\n                        Condominio4: 0\r\n                      </Accordion.Toggle>\r\n                      <Accordion.Collapse className=\"separated_borders_accordeon\" eventKey=\"4\">\r\n                        <h5 className=\"text-center\">No se encontraron registros</h5>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Page>\r\n    );\r\n\r\n}\r\nexport default DashboardPage;\r\n"],"sourceRoot":""}