{"version":3,"sources":["components/Table.jsx","assets/img/users/cap1.png","assets/img/bg/background_1920-2.jpg","utils/propTypes.js","components/Avatar.js","components/Card/UserCard.js","components/Card/AnnouncementCard.js","components/Todos.js","components/Card/TodosCard.js","utils/bemnames.js","components/Typography.js","components/Page.js","components/DashboardOwnershipComponent.jsx","components/AccordionDashboardComponent.jsx","components/DashboardEstandartComponent.jsx","components/DashboardHousingComponent.jsx","pages/DashboardPage.js"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","displayPaginationUp","letrasChicas","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","iHeader","getHeaderGroupProps","headers","icolum","getHeaderProps","getSortByToggleProps","style","fontSize","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","icell","getCellProps","autoRemove","val","Table","module","exports","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","Avatar","rounded","circle","src","Tag","tag","restProps","classes","classNames","width","height","defaultProps","userImage","UserCard","avatar","avatarSize","title","subtitle","children","Card","inverse","CardBody","CardTitle","CardSubtitle","CardText","AnnouncementCard","color","header","name","buttonProps","bgColor","CardHeader","Button","Todos","arrayOf","shape","done","bool","todos","ListGroup","flush","ListGroupItem","FormGroup","check","Label","Input","checked","readOnly","block","TodosCard","image","CardImg","CardImgOverlay","opacity","backgroundImage","namespace","bemNames","create","blockName","b","more","m","tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","bem","bn","Page","breadcrumbs","Breadcrumb","BreadcrumbItem","index","active","DashboardOwnershipComponent","props","Container","Row","Col","sm","md","lg","user","AccordionDashboardComponent","useEffect","console","log","housing","Accordion","Toggle","as","Header","eventKey","backgroundColor","ownerships","Collapse","wb","xlsx","book_new","bodyTable","Props","Title","Subject","Author","CreatedDate","moment","format","SheetNames","push","forEach","v","housing_complexe","typeOwnership","ownership_client","last_names","date_inscription_conservative","add","config","garanty_1","ws","aoa_to_sheet","Sheets","wbout","bookType","datos","s2ab","saveAs","Blob","ssOpenColumns","columns_table_accordion","DashboardEstandartComponent","useState","ssOpen","setSSOpen","housings","setHousings","setConfig","fetchData","accessor","Cell","props1","original","redirectToFormSS","date_request","client","ownership","block_mza","status","Badge","history","replace","promises","axios","get","API_URL","Promise","all","then","result","ss_propiedad","housing_vencida","catch","err","response","toast","error","message","fluid","Tabs","defaultActiveKey","Tab","Body","DashboardHousingComponent","connect","auth","id_rol"],"mappings":"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","file":"static/js/12.4364a019.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .tr_cabecera{\r\n    background-color: rgb(218, 236, 242);\r\n    color: black;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, displayPaginationUp, letrasChicas }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {\r\n        displayPaginationUp ? (\r\n          <div className=\"pagination\">\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </Button>{' '}\r\n            <span>\r\n              Página{' '}\r\n              <strong>\r\n                {pageIndex + 1} de {pageOptions.length}\r\n              </strong>{' '}\r\n            </span>\r\n            <span className=\"ml-3\">\r\n              | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(page)\r\n                }}\r\n                className=\"inputPage\"\r\n                onChange={(e) => {\r\n                  if(e.target.value > pageOptions.length){\r\n                    e.target.value = 1\r\n                  }\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n              }}\r\n              className=\"inputPage\"\r\n            >\r\n              {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Mostrar {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : ''\r\n      }\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup,iHeader) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\" key={iHeader}>\r\n              {headerGroup.headers.map((column,icolum) => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"tr_cabecera\" style={{ fontSize: letrasChicas ? '14px' : '15px'}} key={icolum}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\" style={{ fontSize: letrasChicas ? '13px' : '15px' }}>\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()} key={i+'-'}>\r\n                  {row.cells.map((cell,icell) => {\r\n                    return <td {...cell.getCellProps()} key={icell+'td'}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,displayPaginationUp,letrasChicas}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} displayPaginationUp={displayPaginationUp} letrasChicas={letrasChicas} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  displayPaginationUp: PropTypes.bool,\r\n  letrasChicas: PropTypes.bool,\r\n}\r\n\r\nexport default Table\r\n","module.exports = __webpack_public_path__ + \"static/media/cap1.dc8b1732.png\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-2.c54eef50.jpg\";","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  ...PropTypes,\r\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport userImage from 'assets/img/users/cap1.png';\r\n\r\nconst Avatar = ({\r\n  rounded,\r\n  circle,\r\n  src,\r\n  size,\r\n  tag: Tag,\r\n  className,\r\n  style,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames({ 'rounded-circle': circle, rounded }, className);\r\n  return (\r\n    <Tag\r\n      src={src}\r\n      style={{ width: size, height: size, ...style }}\r\n      className={classes}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nAvatar.propTypes = {\r\n  tag: PropTypes.component,\r\n  rounded: PropTypes.bool,\r\n  circle: PropTypes.bool,\r\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  src: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nAvatar.defaultProps = {\r\n  tag: 'img',\r\n  rounded: false,\r\n  circle: true,\r\n  size: 40,\r\n  src: userImage,\r\n  style: {},\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardTitle, CardSubtitle, CardText, CardBody } from 'reactstrap';\r\n\r\nimport Avatar from '../Avatar';\r\n\r\nconst UserCard = ({\r\n  avatar,\r\n  avatarSize,\r\n  title,\r\n  subtitle,\r\n  text,\r\n  children,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('bg-gradient-theme', className);\r\n\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      <CardBody className=\"d-flex justify-content-center align-items-center flex-column\">\r\n        <Avatar src={avatar} size={avatarSize} className=\"mb-2\" />\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardSubtitle>{subtitle}</CardSubtitle>\r\n        <CardText>\r\n          <small>{text}</small>\r\n        </CardText>\r\n      </CardBody>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  avatar: PropTypes.string,\r\n  avatarSize: PropTypes.number,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  text: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nUserCard.defaultProps = {\r\n  avatarSize: 80,\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardHeader, CardBody, CardText, Button } from 'reactstrap';\r\n\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport classNames from 'classnames';\r\n\r\nconst AnnouncementCard = ({\r\n  color,\r\n  header,\r\n  avatar,\r\n  avatarSize,\r\n  name,\r\n  date,\r\n  text,\r\n  className,\r\n  buttonProps,\r\n  ...restProps\r\n}) => {\r\n  const bgColor = `bg-${color}`;\r\n  const classes = classNames(bgColor, className);\r\n\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      {header && typeof header === 'string' ? (\r\n        <CardHeader className={bgColor}>{header}</CardHeader>\r\n      ) : (\r\n        header\r\n      )}\r\n      <CardBody className=\"d-flex flex-wrap flex-column align-items-center justify-content-center\">\r\n        <Avatar size={avatarSize} src={avatar} />\r\n        <CardText className=\"text-center\">\r\n          <strong className=\"d-block\">{name}</strong>\r\n          <small className=\"text-muted\">{date}</small>\r\n        </CardText>\r\n        <CardText className=\"text-center\">{text}</CardText>\r\n\r\n        <Button color=\"primary\" {...buttonProps} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAnnouncementCard.propTypes = {\r\n  color: PropTypes.string,\r\n  header: PropTypes.node,\r\n  avatar: PropTypes.string,\r\n  avatarSize: PropTypes.number,\r\n  name: PropTypes.string,\r\n  date: PropTypes.date,\r\n  className: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nAnnouncementCard.defaultProps = {\r\n  color: 'gradient-secondary',\r\n  avatarSize: 60,\r\n};\r\n\r\nexport default AnnouncementCard;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nexport const propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.ID,\r\n      title: PropTypes.string,\r\n      done: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nconst Todos = ({ todos, ...restProps }) => {\r\n  return (\r\n    <ListGroup flush {...restProps}>\r\n      {todos.map(({ id, title, done } = {}) => (\r\n        <ListGroupItem key={id} className=\"border-0\">\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"checkbox\" checked={done} readOnly />\r\n              {done ? <strike>{title}</strike> : <span>{title}</span>}\r\n            </Label>\r\n          </FormGroup>\r\n        </ListGroupItem>\r\n      ))}\r\n      <Button block>Add</Button>\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nTodos.propTypes = propTypes;\r\n\r\nTodos.defaultProps = {\r\n  todos: [],\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport Todos, { propTypes as TodosPropTypes } from 'components/Todos';\r\n\r\nimport backgroundImage from 'assets/img/bg/background_1920-2.jpg';\r\n\r\nconst TodosCard = ({ image, title, subtitle, todos, ...restProps }) => {\r\n  return (\r\n    <Card {...restProps}>\r\n      <div className=\"position-relative\">\r\n        <CardImg src={image} />\r\n        <CardImgOverlay className=\"bg-dark\" style={{ opacity: 0.2 }}>\r\n          <CardTitle className=\"text-white\">{title}</CardTitle>\r\n          <CardText className=\"text-white\">{subtitle}</CardText>\r\n        </CardImgOverlay>\r\n      </div>\r\n      <Todos todos={todos} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nTodosCard.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  todos: TodosPropTypes.todos,\r\n};\r\n\r\nTodosCard.defaultProps = {\r\n  image: backgroundImage,\r\n  title: 'Tasks',\r\n  subtitle: 'Due soon...',\r\n};\r\n\r\nexport default TodosCard;\r\n","import classNames from 'classnames';\r\n\r\nexport const createBEM = namespace => {\r\n  return {\r\n    create: blockName => {\r\n      let block = blockName;\r\n\r\n      if (typeof namespace === 'string') {\r\n        block = `${namespace}-${blockName}`;\r\n      }\r\n\r\n      return {\r\n        b: (...more) => {\r\n          return classNames(block, more);\r\n        },\r\n        e: (className, ...more) => {\r\n          return classNames(`${block}__${className}`, more);\r\n        },\r\n        m: (className, ...more) => {\r\n          return classNames(`${block}--${className}`, more);\r\n        },\r\n      };\r\n    },\r\n  };\r\n};\r\n\r\nexport const bemNames = createBEM('cr');\r\n\r\nexport default bemNames;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container\r\n} from 'react-bootstrap'\r\nimport 'styles/components/dashboardComponent.css'\r\n\r\nconst DashboardOwnershipComponent = (props) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"title_principal\">Bienvenido {props.user.name} </h4>\r\n          <hr/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <p>Este servicio web tiene como objetivo facilitar y personalizar el servicio de posventa con el cliente dando un seguimiento y una gestión puntual a cada solicitud de servicio que se genere en su inmueble.</p>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <ul>\r\n            <li className=\"border_bottom\">Realice solicitudes de servicio.</li>\r\n            <li className=\"border_bottom\">Revise el seguimiento y el estatus de la solicitud 100% en línea.</li>\r\n            <li className=\"border_bottom\">Genere cualquier consulta o duda relacionada al inmueble u otros temas.</li>\r\n            <li className=\"border_bottom\">Descargue manuales de operación y los planos del inmueble.</li>\r\n            <li className=\"border_bottom\">Revise los avisos importantes.</li>\r\n          </ul>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DashboardOwnershipComponent\r\n","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Accordion,\r\n  Tab,\r\n  Tabs,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport { formatNumber, s2ab } from 'utils/functions'\r\nimport { saveAs } from 'file-saver'\r\nimport * as xlsx from 'xlsx'\r\nimport * as moment from 'moment-timezone'\r\n\r\nconst AccordionDashboardComponent = (props) => {\r\n  useEffect(() => {\r\n    console.log(props.housing);\r\n  },[])\r\n\r\n  const exportToExcel = () => {\r\n\r\n    let wb = xlsx.utils.book_new()\r\n    let bodyTable = [['Nro Propiedad','C. Habitacional','Tipo Propiedad','Propietario','Inscripción a Conservador','Termino de Garantía']]\r\n\r\n    wb.Props = {\r\n      Title: \"Reporte de Propiedades con garantia vencida (inscripción a conservador)\",\r\n      Subject: \"Exportación de Data\",\r\n      Author: 'Veanx tecnology',\r\n      CreatedDate: moment().format('YYYY-MM-DD')\r\n    };\r\n    wb.SheetNames.push(\"Propiedades\");\r\n\r\n    props.housing.ownerships.forEach((v,i) => {\r\n      bodyTable.push([\r\n        v.number,\r\n        v.housing_complexe.name,\r\n        v.typeOwnership.name,\r\n        v.ownership_client.name +' '+v.ownership_client.last_names,\r\n        moment(v.date_inscription_conservative).format('DD-MM-YYYY'),\r\n        moment(v.date_inscription_conservative).add(props.config.garanty_1, 'years').format('DD-MM-YYYY'),\r\n      ])\r\n    })\r\n\r\n    var ws = xlsx.utils.aoa_to_sheet(bodyTable);\r\n    wb.Sheets[\"Propiedades\"] = ws;\r\n    var wbout = xlsx.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n    let datos = s2ab(wbout)\r\n    saveAs(new Blob([datos],{type:\"application/octet-stream\"}), 'Reporte de Propiedades con Garantias Vencidas a Conservador'+moment().format('DD-MM-YYYY')+'.xlsx')\r\n\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm={12} md={12} lg={12}>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey={props.id} style={{ backgroundColor: 'rgb(24, 20, 101)', color: 'white'}}>\r\n            {props.housing.name} : {props.housing.ownerships.length}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse className=\"separated_borders_accordeon\" eventKey={props.id}>\r\n\r\n            {props.housing.ownerships ? (\r\n              <Row>\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"success\" block={true} type=\"button\" size=\"sm\" onClick={exportToExcel}>Exportar a Excel</Button>\r\n                  <br/>\r\n                </Col>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <Table columns={props.columns} data={props.housing.ownerships}/>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <h5 className=\"text-center\">No se encontraron registros</h5>\r\n            )}\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nAccordionDashboardComponent.propTypes = {\r\n  housing : PropTypes.object.isRequired,\r\n  config: PropTypes.object.isRequired,\r\n  id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default AccordionDashboardComponent\r\n","import { AnnouncementCard, TodosCard } from 'components/Card';\r\nimport Page from 'components/Page';\r\nimport { connect } from 'react-redux'\r\nimport React, { useEffect , useState, useMemo } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Accordion,\r\n  Tab,\r\n  Tabs,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport 'styles/pages/dashboard.css'\r\nimport { API_URL } from 'utils/constants'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport Table from 'components/Table'\r\nimport * as moment from 'moment-timezone'\r\nimport AccordionDashboardComponent from 'components/AccordionDashboardComponent'\r\n\r\nlet ssOpenColumns = []\r\nlet columns_table_accordion = []\r\n\r\nconst DashboardEstandartComponent = props => {\r\n\r\n  const [ssOpen, setSSOpen] = useState([])\r\n  const [housings, setHousings] = useState([])\r\n  const [config, setConfig] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n    return () => {\r\n      ssOpenColumns = []\r\n      columns_table_accordion = []\r\n    }\r\n  },[])\r\n\r\n  useMemo(() => {\r\n    ssOpenColumns = [\r\n      {\r\n        Header: 'Nro.SS',\r\n        accessor: 'id',\r\n        Cell: props1 => {\r\n          const original = props1.cell.row.original\r\n          return (\r\n            <Button variant=\"link\" size=\"sm\" onClick={() => redirectToFormSS(original.id)}>{original.id}</Button>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        Header: 'Fecha Emisión',\r\n        accessor: props1 => [moment(props1.date_request).format('DD-MM-YYYY')]\r\n      },\r\n      {\r\n        Header: 'Cliente',\r\n        accessor: props1 => props1.client ? [props1.client.name+\" \"+props1.client.last_names] : []\r\n      },\r\n      {\r\n        Header: 'Depto',\r\n        accessor: props1 => props1.ownership ? [props1.ownership.number] : []\r\n      },\r\n      {\r\n        Header: 'Block/Mzna',\r\n        accessor: props1 => props1.housing.block_mza ? ['Si'] : ['No']\r\n      },\r\n      {\r\n        Header: 'Proyecto',\r\n        accessor: props1 => [props1.housing.name]\r\n      },\r\n      {\r\n        Header: 'Prioridad',\r\n        accessor: props1 => [props1.status.status],\r\n        Cell: props1 => {\r\n          const original = props1.cell.row.original\r\n          return (<Badge variant=\"danger\" className=\"font-badge\">{original.status.status}</Badge>)\r\n        }\r\n      },\r\n    ]\r\n\r\n    columns_table_accordion = [\r\n      {\r\n        Header: 'Nro Prop',\r\n        accessor: 'number'\r\n      },\r\n      {\r\n        Header: 'C. Habi',\r\n        accessor: props1 => [props1.housing_complexe.name]\r\n      },\r\n      {\r\n        Header: 'Tipo Propiedad',\r\n        accessor: props1 => [props1.typeOwnership.name]\r\n      },\r\n      {\r\n        Header: 'Propietario',\r\n        accessor: props1 => [props1.ownership_client.name +' '+props1.ownership_client.last_names]\r\n      },\r\n      {\r\n        Header: 'Inscripción a Conservador',\r\n        accessor: props1 => [moment(props1.date_inscription_conservative).format('DD-MM-YYYY')]\r\n      },\r\n      {\r\n        Header: 'Termino de Garantia',\r\n        accessor: props1 => [moment(props1.date_inscription_conservative).add(config.garanty_1, 'years').format('DD-MM-YYYY')],\r\n      },\r\n    ]\r\n  },[config])\r\n\r\n  const redirectToFormSS = id => {\r\n    props.history.replace('request/property/managment/form/'+id)\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let promises = [\r\n      axios.get(API_URL+'dashboard_data'),\r\n      axios.get(API_URL+'master_config_property_data'),\r\n    ]\r\n    Promise.all(promises).then(result => {\r\n      setSSOpen(result[0].data.ss_propiedad)\r\n      setHousings(result[0].data.housing_vencida)\r\n      setConfig(result[1].data)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  const redirectRoute = route => {\r\n    props.history.replace(route)\r\n  }\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Tabs defaultActiveKey=\"ss_open\" id=\"uncontrolled-tab-example\" variant=\"pills\">\r\n            <Tab eventKey=\"ss_open\" title=\"S.S Abiertas\">\r\n              <br/>\r\n              <Card>\r\n                <Card.Header style={{ backgroundColor: 'lightgray', color: 'black'}}>\r\n                  S.S Abiertas por mas de 5 días\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {ssOpen.length > 0 ? (\r\n                    <Table columns={ssOpenColumns} data={ssOpen} />\r\n                  ) : (\r\n                    <h5 className=\"alert alert-warning text-center\">No se encontraron Registros</h5>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Tab>\r\n            <Tab eventKey=\"ss_construc\" title=\"S.S para constructora\">\r\n              <br/>\r\n              <Card>\r\n                <Card.Header style={{ backgroundColor: 'lightgray', color: 'black'}}>\r\n                  S.S. del dia para Constructora.\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h5 className=\"alert alert-warning text-center\">No se encontraron Registros</h5>\r\n                </Card.Body>\r\n              </Card>\r\n            </Tab>\r\n            <Tab eventKey=\"propiedades\" title=\"Propiedades con Garantía Vencida\">\r\n              <br/>\r\n              <Card className=\"accordeon_dashboard\">\r\n                <Card.Header style={{ backgroundColor: 'lightgray', color: 'black'}}>\r\n                  Propidades con primera Garantía vencida (Inscripción a Conservador).\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Accordion className=\"separated_borders\">\r\n                    {housings.map((v,i) => (\r\n                      <AccordionDashboardComponent  columns={columns_table_accordion} id={i} key={i} housing={v} config={config}/>\r\n                    ))}\r\n                  </Accordion>\r\n                </Card.Body>\r\n              </Card>\r\n            </Tab>\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DashboardEstandartComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container\r\n} from 'react-bootstrap'\r\nimport 'styles/components/dashboardComponent.css'\r\n\r\nconst DashboardHousingComponent = (props) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"title_principal\">Bienvenido {props.user.name} - {props.housing.housing.name} - Administración </h4>\r\n          <hr/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <p>Este servicio web tiene como objetivo facilitar y personalizar el servicio de posventa con el cliente dando un seguimiento y una gestión puntual a cada solicitud de servicio que se genere en su inmueble.</p>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <ul>\r\n            <li className=\"border_bottom\">Realice solicitudes de servicio.</li>\r\n            <li className=\"border_bottom\">Revise el seguimiento y el estatus de la solicitud 100% en línea.</li>\r\n            <li className=\"border_bottom\">Genere cualquier consulta o duda relacionada al inmueble u otros temas.</li>\r\n            <li className=\"border_bottom\">Descargue manuales de operación y los planos del inmueble.</li>\r\n            <li className=\"border_bottom\">Revise los avisos importantes.</li>\r\n          </ul>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DashboardHousingComponent\r\n","import { AnnouncementCard, TodosCard } from 'components/Card';\r\nimport Page from 'components/Page';\r\nimport { connect } from 'react-redux'\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Accordion\r\n} from 'react-bootstrap'\r\nimport DashboardOwnershipComponent from '../components/DashboardOwnershipComponent'\r\nimport DashboardEstandartComponent from '../components/DashboardEstandartComponent'\r\nimport DashboardHousingComponent from '../components/DashboardHousingComponent'\r\nimport 'styles/pages/dashboard.css'\r\n\r\nconst DashboardPage = props => {\r\n    useEffect(() => {\r\n      console.log(props,'aqui');\r\n    },[])\r\n\r\n    return (\r\n      <Page\r\n        className=\"DashboardPage\"\r\n        title=\"Escritorio\"\r\n        breadcrumbs={[{ name: 'Escritorio', active: true }]}\r\n      >\r\n        {props.user.id_rol < 5 ? (\r\n            <DashboardEstandartComponent {...props} />\r\n          ) : props.user.id_rol == 5 ? (\r\n            <DashboardOwnershipComponent {...props} />\r\n          ) : props.user.id_rol == 6 ? (\r\n            <DashboardHousingComponent {...props} />\r\n          ) : ''\r\n\r\n        }\r\n      </Page>\r\n    );\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    user : state.auth.user,\r\n    housing: state.housing.housing,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(DashboardPage);\r\n"],"sourceRoot":""}