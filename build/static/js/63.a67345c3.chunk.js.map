{"version":3,"sources":["components/Table.jsx","components/ClientFormComponent.jsx","pages/masters/OwnershipFormPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","displayPaginationUp","letrasChicas","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","iHeader","getHeaderGroupProps","headers","icolum","getHeaderProps","getSortByToggleProps","style","fontSize","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","icell","getCellProps","autoRemove","val","Table","ClientFormComponent","props","useState","validated","setValidated","name","last_names","rut","email","id_city","id_country","poblation","phone_1","phone_2","address","setData","countrys","setCountrys","citys","setCitys","inputRef","useRef","useEffect","fetchData","current","focus","promises","axios","get","API_URL","match","params","push","Promise","all","then","result","a","propCity","find","v","cities","catch","err","response","toast","error","message","persist","propCitys","split","join","substring","gotBackToTable","isModal","showTable","history","replace","clearForm","sm","md","lg","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","put","success","post","noValidate","inputRut","handleChange","ref","inputName","inputLastNames","inputAddress","inputPoblation","inputEmail","inputPhone","inputPhone2","inputCountry","inputCity","block","defaultProps","required","label","messageErrors","cols","is_lesee","OwnershipFormPage","housingComplexes","setHousingComplexes","blocks","setBlocks","typeOwnerships","setTypeOwnerships","models","setModels","name_ownership","setNameOwnership","name_lesee","setNameLesee","isCreateClient","setIsCreateClient","isOpenModalClient","setIsOpenModalClient","clientData","setClientData","setNameParking","setNameCeller","nameFile","setNameFile","documentUpload","setDocumentUpload","number","id_housing_complexe","id_block_mzna","id_type_ownership","number_rooms","number_bathrooms","square_mtr","id_models","date_signature_writing","date_inscription_conservative","date_delivery_ownership","id_client_ownership","id_client_lessee","file","parkings","cellars","user","password","config_ss","setTimeout","moment","format","handleShowClientForm","submit","openModalClient","searchClientByRut","client","pushParkingCeller","document","getElementById","removeParkinCellar","xs","newFormData","FormData","forEach","append","handleOnBlur","Fragment","click","accept","valid_format_documents","display","indexOf","files","src","delete","console","log","show","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","accessor","Cell","props1","original","Footer","inputNumber","connect","configs","config"],"mappings":"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","file":"static/js/63.a67345c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .tr_cabecera{\r\n    background-color: rgb(218, 236, 242);\r\n    color: black;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, displayPaginationUp, letrasChicas }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {\r\n        displayPaginationUp ? (\r\n          <div className=\"pagination\">\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </Button>{' '}\r\n            <span>\r\n              Página{' '}\r\n              <strong>\r\n                {pageIndex + 1} de {pageOptions.length}\r\n              </strong>{' '}\r\n            </span>\r\n            <span className=\"ml-3\">\r\n              | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(page)\r\n                }}\r\n                className=\"inputPage\"\r\n                onChange={(e) => {\r\n                  if(e.target.value > pageOptions.length){\r\n                    e.target.value = 1\r\n                  }\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n              }}\r\n              className=\"inputPage\"\r\n            >\r\n              {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Mostrar {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : ''\r\n      }\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup,iHeader) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\" key={iHeader}>\r\n              {headerGroup.headers.map((column,icolum) => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"tr_cabecera\" style={{ fontSize: letrasChicas ? '14px' : '15px'}} key={icolum}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\" style={{ fontSize: letrasChicas ? '13px' : '15px' }}>\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()} key={i+'-'}>\r\n                  {row.cells.map((cell,icell) => {\r\n                    return <td {...cell.getCellProps()} key={icell+'td'}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,displayPaginationUp,letrasChicas}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} displayPaginationUp={displayPaginationUp} letrasChicas={letrasChicas} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  displayPaginationUp: PropTypes.bool,\r\n  letrasChicas: PropTypes.bool,\r\n}\r\n\r\nexport default Table\r\n","import React, { useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ClientFormComponent = (props) => {\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const [data, setData] = useState({\r\n    name:'',\r\n    last_names: '',\r\n    rut: '',\r\n    email: '',\r\n    id_city:'',\r\n    id_country: '',\r\n    poblation: '',\r\n    phone_1: '',\r\n    phone_2: '',\r\n    address: ''\r\n  })\r\n  const [countrys,setCountrys] = useState([])\r\n  const [citys,setCitys] = useState([])\r\n  const inputRef = useRef(null)\r\n  useEffect(() => {\r\n    fetchData()\r\n    inputRef.current.focus()\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = [\r\n      axios.get(API_URL+'master_countrys')\r\n    ]\r\n    if(props.match.params.id){\r\n      promises.push(\r\n        axios.get(API_URL+'client/'+props.match.params.id)\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(async result => {\r\n      setCountrys(result[0].data)\r\n      if(result[1]){\r\n        setData({\r\n          name: result[1].data.name,\r\n          last_names: result[1].data.last_names,\r\n          rut: result[1].data.rut,\r\n          email: result[1].data.email,\r\n          id_city: result[1].data.id_city,\r\n          id_country: result[1].data.id_country,\r\n          poblation: result[1].data.poblation,\r\n          phone_1: result[1].data.phone_1,\r\n          phone_2: result[1].data.phone_2,\r\n          address: result[1].data.address,\r\n          id: result[1].data.id\r\n        })\r\n\r\n        setCitys(propCity => {\r\n          return result[0].data.find(v => v.id == result[1].data.id_country).cities\r\n        })\r\n      }\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    e.persist()\r\n\r\n    if(e.target.name === \"id_country\"){\r\n      setCitys(propCitys => {\r\n        return countrys.find(v => v.id == e.target.value).cities\r\n      })\r\n      setData({...data, id_country: e.target.value, id_city: ''})\r\n    }else if(e.target.name === \"rut\"){\r\n      let val = e.target.value\r\n      val = val.split('-').join('')\r\n      if(val){\r\n        val = val.substring(0, val.length - 1)+'-'+val.substring(val.length - 1)\r\n      }\r\n      setData({...data, rut: val})\r\n    }else{\r\n      setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},data)\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'client/'+objectPost.id,objectPost).then(result => {\r\n        toast.success('Registro Modificado')\r\n        gotBackToTable()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'client',objectPost).then(result => {\r\n        toast.success('Registro Creado')\r\n        clearForm()\r\n        if(props.isModal){\r\n          gotBackToTable(true)\r\n        }\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const gotBackToTable = type => {\r\n    if(props.isModal){\r\n      props.showTable(type)\r\n    }else{\r\n      props.history.replace('/masters/clients')\r\n    }\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name:'',\r\n      last_names: '',\r\n      rut: '',\r\n      email: '',\r\n      id_city:'',\r\n      id_country: '',\r\n      poblation: '',\r\n      phone_1: '',\r\n      phone_2: '',\r\n      address: ''\r\n    })\r\n    setValidated(false)\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"\">\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n            <Row>\r\n              <InputFieldRef\r\n                {...props.inputRut}\r\n                value={data.rut}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                {...props.inputName}\r\n                value={data.name}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputLastNames}\r\n                value={data.last_names}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputAddress}\r\n                value={data.address}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPoblation}\r\n                value={data.poblation}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputEmail}\r\n                value={data.email}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputPhone}\r\n                value={data.phone_1}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPhone2}\r\n                value={data.phone_2}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputCountry}\r\n                value={data.id_country}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {countrys.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n              <InputField\r\n                {...props.inputCity}\r\n                value={data.id_city}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {citys.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" block={true}>Guardar</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"danger\" block={true} onClick={() => {gotBackToTable(false) }}>Volver</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nClientFormComponent.propTypes = {\r\n  isModal : PropTypes.bool.isRequired,\r\n  showTable: PropTypes.func.isRequired\r\n}\r\n\r\nClientFormComponent.defaultProps = {\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputLastNames: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'last_names',\r\n    label : 'Apellidos',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPoblation: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'poblation',\r\n    label : 'Población',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputAddress: {\r\n    type: 'textarea',\r\n    required: false,\r\n    name: 'address',\r\n    label : 'Dirección',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputCountry: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_country',\r\n    label : 'País',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputCity: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_city',\r\n    label : 'Ciudad',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: false,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*,',' Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_1',\r\n    label : 'Teléfono Principal',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputPhone2: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_2',\r\n    label : 'Telefono Secundario',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n}\r\n\r\nexport default ClientFormComponent\r\n","import React, { useMemo, useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Accordion,\r\n  Card,\r\n  Modal\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  FaPlusCircle,\r\n  FaTrash\r\n} from 'react-icons/fa'\r\nimport Table from 'components/Table'\r\nimport ClientFormComponent from 'components/ClientFormComponent'\r\nimport * as moment from 'moment-timezone'\r\nlet client_columns = []\r\nlet is_lesee = false\r\n\r\nconst OwnershipFormPage = (props) => {\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const [housingComplexes, setHousingComplexes] = useState([])\r\n  const [blocks, setBlocks] = useState([])\r\n  const [typeOwnerships, setTypeOwnerships] = useState([])\r\n  const [models, setModels] = useState([])\r\n  const [name_ownership, setNameOwnership]  = useState('')\r\n  const [name_lesee, setNameLesee]  = useState('')\r\n  const [isCreateClient, setIsCreateClient] = useState(false)\r\n  const [isOpenModalClient, setIsOpenModalClient] = useState(false)\r\n  const [clientData, setClientData] = useState([])\r\n  const [nameParking, setNameParking] = useState('')\r\n  const [nameCeller, setNameCeller] = useState('')\r\n  const [nameFile, setNameFile] = useState('')\r\n  const [documentUpload, setDocumentUpload] = useState(null)\r\n  const [data, setData] = useState({\r\n    number:'',\r\n    id_housing_complexe: '',\r\n    id_block_mzna: '',\r\n    id_type_ownership: '',\r\n    number_rooms: '',\r\n    number_bathrooms: '',\r\n    address: '',\r\n    square_mtr: '',\r\n    id_models: '',\r\n    date_signature_writing:'',\r\n    date_inscription_conservative: '',\r\n    date_delivery_ownership: '',\r\n    id_client_ownership: '',\r\n    id_client_lessee: '',\r\n    file: '',\r\n    parkings: [],\r\n    cellars: [],\r\n    user: '',\r\n    password: '',\r\n    file: '',\r\n  })\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n\r\n    if(props.config_ss && Object.keys(props.config_ss).length > 0){\r\n      fetchData()\r\n      inputRef.current.focus()\r\n\r\n      return () => {\r\n        is_lesee = false\r\n      }\r\n    }else{\r\n      toast.error('Debe hacer su configuración primero')\r\n      setTimeout(function () {\r\n        props.history.replace('/masters/config')\r\n      }, 1000);\r\n    }\r\n\r\n  },[])\r\n\r\n  useMemo(() => {\r\n\r\n    client_columns = []\r\n\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = [\r\n      axios.get(API_URL+'housing_complexe'),\r\n      axios.get(API_URL+'master_block'),\r\n      axios.get(API_URL+'params_model_property'),\r\n      axios.get(API_URL+'type_ownership'),\r\n      axios.get(API_URL+'client'),\r\n    ]\r\n\r\n    if(props.match.params.id){\r\n      promises.push(\r\n        axios.get(API_URL+'masters_ownership/'+props.match.params.id)\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(result => {\r\n\r\n      setHousingComplexes(result[0].data)\r\n      setBlocks(result[1].data)\r\n      setModels(result[2].data)\r\n      setTypeOwnerships(result[3].data)\r\n      setClientData(result[4].data)\r\n\r\n      if(result[5]){\r\n        setData({\r\n          number:result[5].data.number,\r\n          id_housing_complexe: result[5].data.id_housing_complexe,\r\n          id_block_mzna: result[5].data.id_block_mzna,\r\n          id_type_ownership: result[5].data.id_type_ownership,\r\n          number_rooms: result[5].data.number_rooms,\r\n          number_bathrooms: result[5].data.number_bathrooms,\r\n          address: result[5].data.address,\r\n          square_mtr: result[5].data.square_mtr,\r\n          id_models: result[5].data.id_models,\r\n          date_signature_writing: moment(result[5].data.date_signature_writing).format('YYYY-MM-DD'),\r\n          date_inscription_conservative: moment(result[5].data.date_inscription_conservative).format('YYYY-MM-DD'),\r\n          date_delivery_ownership: moment(result[5].data.date_delivery_ownership).format('YYYY-MM-DD'),\r\n          id_client_ownership: result[5].data.id_client_ownership,\r\n          id_client_lessee: result[5].data.id_client_lessee,\r\n          file: result[5].data.file,\r\n          parkings: result[5].data.parkings.length > 0 ? result[5].data.parkings.filter(v => v.type == 2).map(v => v.name) : [],\r\n          cellars: result[5].data.parkings.length > 0 ? result[5].data.parkings.filter(v => v.type == 1).map(v => v.name) : [],\r\n          user: result[5].data.user,\r\n          password: '',\r\n          id: result[5].data.id\r\n        })\r\n        setNameFile(result[5].data.file)\r\n      }\r\n\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    e.persist()\r\n    let val = e.target.value\r\n    if(e.target.name === \"id_client_lessee\" || e.target.name === \"id_client_ownership\"){\r\n      val = val ? val.split('-').join('') : val\r\n      val = val ? val.substring(0,val.length - 1)+'-'+val.substring(val.length - 1) : val\r\n      setData({...data, [e.target.name]: val})\r\n    }else{\r\n      setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleShowClientForm = (submit = false) => {\r\n    if(submit){\r\n      fetchData()\r\n    }\r\n    setIsCreateClient(!isCreateClient)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},data)\r\n    let newFormData = new FormData\r\n    Object.keys(data).forEach((v, i) => {\r\n      newFormData.append(v,data[v])\r\n    });\r\n\r\n    if(documentUpload){\r\n      newFormData.append('document',documentUpload)\r\n    }\r\n\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'masters_ownership/'+objectPost.id,newFormData).then(result => {\r\n        toast.success('Registro Modificado')\r\n        clearForm()\r\n        setTimeout(function () {\r\n          gotBackToTable()\r\n        }, 1000);\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'masters_ownership',newFormData).then(result => {\r\n        toast.success('Registro Creado')\r\n        clearForm()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const gotBackToTable = () => {\r\n    props.history.replace('/masters/ownerships')\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      number:'',\r\n      id_housing_complexe: '',\r\n      id_block_mzna: '',\r\n      id_type_ownership: '',\r\n      number_rooms: '',\r\n      number_bathrooms: '',\r\n      address: '',\r\n      square_mtr: '',\r\n      id_models: '',\r\n      date_signature_writing:'',\r\n      date_inscription_conservative: '',\r\n      date_delivery_ownership: '',\r\n      id_client_ownership: '',\r\n      id_client_lessee: '',\r\n      file: '',\r\n      parkings: [],\r\n      cellars: [],\r\n      user: '',\r\n      password: '',\r\n      file: '',\r\n    })\r\n    setValidated(false)\r\n    inputRef.current.focus()\r\n    setNameOwnership('')\r\n    setNameLesee('')\r\n    setNameParking('')\r\n    setNameCeller('')\r\n    setNameFile('')\r\n    setDocumentUpload(null)\r\n\r\n  }\r\n\r\n  const openModalClient = (type = false) => {\r\n\r\n    if(type === \"lesee\"){\r\n      is_lesee = true\r\n    }else if(type === \"ownership\"){\r\n      is_lesee = false\r\n    }\r\n\r\n    if(!isOpenModalClient){\r\n        setIsCreateClient(false)\r\n    }\r\n\r\n    setIsOpenModalClient(!isOpenModalClient)\r\n  }\r\n\r\n  const clientSelected = value => {\r\n    if(is_lesee){\r\n      setData({...data, id_client_lessee: value.rut})\r\n      setNameLesee(value.name+' '+value.last_names)\r\n    }else{\r\n      setData({...data, id_client_ownership: value.rut})\r\n      setNameOwnership(value.name+' '+value.last_names)\r\n    }\r\n    setIsOpenModalClient(false)\r\n  }\r\n\r\n  const searchClientByRut = (e,type) => {\r\n    let val = e.target.value\r\n    let client = clientData.find(v => v.rut === val)\r\n    if(client){\r\n      if(type === \"lesee\"){\r\n        setNameLesee(client.name+' '+client.last_names)\r\n      }else{\r\n        setNameOwnership(client.name+' '+client.last_names)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const pushParkingCeller = type => {\r\n    if(type === \"parking\"){\r\n      let val = document.getElementById('name_parking').value\r\n      document.getElementById('name_parking').value = ''\r\n      if(val){\r\n        setData({...data, parkings: [...data.parkings,val] })\r\n      }else{\r\n        toast.error('El campo estacionamiento no puede estar vacio')\r\n      }\r\n    }else{\r\n      let val = document.getElementById('name_celler').value\r\n      document.getElementById('name_celler').value = ''\r\n      if(val){\r\n        setData({...data, cellars: [...data.cellars,val] })\r\n      }else{\r\n        toast.error('El campo bodega no puede estar vacio')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const removeParkinCellar = (type,val) => {\r\n    if(type === \"parking\"){\r\n      setData({...data, parkings:  data.parkings.filter(v => v !== val) })\r\n    }else{\r\n      setData({...data, cellars: data.cellars.filter(v => v !== val) })\r\n    }\r\n  }\r\n\r\n  const openFileInput = () => {\r\n    document.getElementById('input_document').click()\r\n  }\r\n\r\n  const onChangeFile = e => {\r\n    if(props.config_ss.valid_format_documents.indexOf(e.target.files[0].type.split('/')[1]) !== -1){\r\n      setDocumentUpload(e.target.files[0])\r\n      setNameFile(e.target.files[0].name)\r\n    }else{\r\n      toast.error('El tipo de archivo no es valido')\r\n      document.getElementById('input_document').value = \"\"\r\n      document.getElementById('input_document').src = \"\"\r\n    }\r\n  }\r\n\r\n  const deleteFile = file => {\r\n    axios.delete(API_URL+'masters_ownership_destroy_file/'+file+'/'+data.id).then(result => {\r\n      toast.success('Archivo eliminado')\r\n      setData({...data, file: ''})\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12} xs={12} className=\"text-right\">\r\n          <span className=\"text-danger\">*Campos Obligatorios</span>\r\n          <br/><br/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n            <Row>\r\n              <InputFieldRef\r\n                type='text'\r\n                required={true}\r\n                name='number'\r\n                label='Número'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.number}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                type='select'\r\n                required={true}\r\n                name='id_housing_complexe'\r\n                label='Conjunto Habitacional'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.id_housing_complexe}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {housingComplexes.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n              <InputField\r\n                type='select'\r\n                required={true}\r\n                name='id_type_ownership'\r\n                label='Tipo Vivienda'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.id_type_ownership}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {typeOwnerships.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                type='number'\r\n                required={true}\r\n                name='number_rooms'\r\n                label='Cantidad. Dormitorios'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.number_rooms}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type='number'\r\n                required={true}\r\n                name='number_bathrooms'\r\n                label='Cantidad Baños'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.number_bathrooms}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type='textarea'\r\n                required={false}\r\n                name='address'\r\n                label='Dirección'\r\n                rows={1}\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.address}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                type='select'\r\n                required={false}\r\n                name='id_block_mzna'\r\n                label='Block Mzna'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.id_block_mzna}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {blocks.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                type='number'\r\n                required={false}\r\n                name='square_mtr'\r\n                label='Metros Cuadrados'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n                value={data.square_mtr}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type='select'\r\n                required={true}\r\n                name='id_models'\r\n                label='Modelo'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n                value={data.id_models}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {models.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n\r\n            </Row>\r\n            <Row>\r\n              <Col sm={5} md={5} lg={5}>\r\n                <label><b>Bodega</b></label>\r\n                <input\r\n                  type='text'\r\n                  name='name_celler'\r\n                  label='Bodega'\r\n                  id=\"name_celler\"\r\n                  className=\"form-control form-control-sm\"\r\n                  size=\"sm\"\r\n                />\r\n              </Col>\r\n              <Col sm={1} md={1} lg={1}>\r\n                <Button type=\"button\" variant=\"success\" className=\"margin_col\" size=\"sm\" block={true} onClick={() => { pushParkingCeller('celler') } }><FaPlusCircle /></Button>\r\n              </Col>\r\n              <Col sm={5} md={5} lg={5}>\r\n                <label><b>Estacionamiento</b></label>\r\n                <input\r\n                  type='text'\r\n                  name='name_parking'\r\n                  id=\"name_parking\"\r\n                  className=\"form-control form-control-sm\"\r\n                  size=\"sm\"\r\n                />\r\n              </Col>\r\n              <Col sm={1} md={1} lg={1}>\r\n                <Button type=\"button\" variant=\"success\" className=\"margin_col\" size=\"sm\" block={true} onClick={() => { pushParkingCeller('parking') }}><FaPlusCircle /></Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={6} md={6} lg={6}>\r\n                <br/>\r\n                {data.cellars.map((v,i) => (\r\n                  <h6>{v} <Button variant=\"danger\" size=\"sm\" onClick={() => { removeParkinCellar('cellar',v) } }><FaTrash /></Button></h6>\r\n                ))}\r\n              </Col>\r\n              <Col sm={6} md={6} lg={6}>\r\n                <br/>\r\n                {data.parkings.map((v,i) => (\r\n                  <h6>{v} <Button variant=\"danger\" size=\"sm\" onClick={() => { removeParkinCellar('parking',v) } }><FaTrash /></Button></h6>\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n              <InputField\r\n                type='date'\r\n                required={false}\r\n                name='date_signature_writing'\r\n                label='Fecha Firma Escritura'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.date_signature_writing}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type='date'\r\n                required={false}\r\n                name='date_inscription_conservative'\r\n                label='Fecha Inscripción Conservador'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.date_inscription_conservative}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type='date'\r\n                required={false}\r\n                name='date_delivery_ownership'\r\n                label='Fecha Entrega Propietario'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n                value={data.date_delivery_ownership}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Row>\r\n                  <InputField\r\n                    type='text'\r\n                    required={true}\r\n                    name='id_client_ownership'\r\n                    label='Propietario'\r\n                    messageErrors={[\r\n                      'Requerido*'\r\n                    ]}\r\n                    cols=\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n                    value={data.id_client_ownership}\r\n                    handleChange={onChange}\r\n                    handleOnBlur={(e) => {searchClientByRut(e,'ownership')}}\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {name_ownership ? (\r\n                      <React.Fragment>\r\n                        {name_ownership}\r\n                        <br/><br/>\r\n                      </React.Fragment>\r\n                    ) : ''}\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col sm={1} md={1} lg={1}>\r\n                <Button variant=\"info\" className=\"margin_col\" block={true} size=\"sm\" onClick={(() => openModalClient('ownership') )}> <FaPlusCircle /> </Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Row>\r\n                  <InputField\r\n                    type='text'\r\n                    required={false}\r\n                    name='id_client_lessee'\r\n                    label='Arrendatario:'\r\n                    messageErrors={[\r\n                      'Requerido*'\r\n                    ]}\r\n                    cols=\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n                    value={data.id_client_lessee}\r\n                    handleChange={onChange}\r\n                    handleOnBlur={(e) => {searchClientByRut(e,'lesee')}}\r\n                  />\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {name_lesee ? (\r\n                      <React.Fragment>\r\n                        {name_lesee}\r\n                        <br/><br/>\r\n                      </React.Fragment>\r\n                    ) : ''}\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col sm={1} md={1} lg={1}>\r\n                <Button variant=\"info\" className=\"margin_col\" block={true} size=\"sm\" onClick={(() => openModalClient('lesee') )}> <FaPlusCircle /> </Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <h6 className=\"margin_col\">Mail:</h6>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                type='text'\r\n                required={true}\r\n                name='user'\r\n                label='Usuario Acceso (a sistema online):'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-6 col-md-6 col-lg-6\"\r\n                value={data.user}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type='password'\r\n                required={props.match.params.id ? false : true}\r\n                name='password'\r\n                label='Clave Acceso (a sistema online):'\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-sm-6 col-md-6 col-lg-6\"\r\n                value={data.password}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button block={true} size=\"sm\" variant=\"secondary\" onClick={openFileInput}>Documento Propietario</Button>\r\n                <input accept={props.config_ss ? props.config_ss.valid_format_documents : ''} type=\"file\" id=\"input_document\" style={{ display: 'none'}} onChange={onChangeFile} />\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                { nameFile !== 'null' && nameFile ? nameFile : '' }\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={12} md={12} lg={12}>\r\n                {nameFile !== 'null' && nameFile ? (\r\n                  <React.Fragment>\r\n                    <b>{data.file}</b>&nbsp;&nbsp;<Button size=\"sm\" variant=\"danger\" type=\"button\" onClick={() => deleteFile(data.file)}><FaTrash /></Button>\r\n                  </React.Fragment>\r\n                ) : ''}\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" block={true}>Guardar</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"danger\" block={true} onClick={gotBackToTable}>Volver</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        show={isOpenModalClient}\r\n        onHide={openModalClient}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Clientes registrados\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            {\r\n              isCreateClient ? (\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <ClientFormComponent isModal={true} showTable={handleShowClientForm} {...props} />\r\n                </Col>\r\n              ) : (\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col sm={4} md={4} lg={4} xs={6}>\r\n                      <Button variant=\"secondary\" block={true} onClick={handleShowClientForm}>Crear Cliente <FaPlusCircle /></Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Table columns={[\r\n                        {\r\n                          Header : 'Rut',\r\n                          accessor: 'rut',\r\n                          Cell: props1 => {\r\n                            const { original } = props1.cell.row\r\n                            return(\r\n                              <Button variant=\"link\" onClick={() => { clientSelected(original) } }>{original.rut}</Button>\r\n                            )\r\n                          }\r\n                        },\r\n                        {\r\n                          Header : 'Nombre',\r\n                          accessor: props1 => [props1.name+' '+props1.last_names],\r\n                        },\r\n                        {\r\n                          Header : 'Dirección',\r\n                          accessor: 'address',\r\n                        },\r\n                        {\r\n                          Header : 'Email',\r\n                          accessor: 'email',\r\n                        }\r\n                      ]} data={clientData} />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={openModalClient}>cerrar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nOwnershipFormPage.defaultProps = {\r\n  inputNumber: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    config_ss : state.configs.config\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(OwnershipFormPage)\r\n"],"sourceRoot":""}