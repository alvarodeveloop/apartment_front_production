{"version":3,"sources":["components/Table.jsx","pages/masters/OwnershipPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","displayPaginationUp","letrasChicas","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","iHeader","getHeaderGroupProps","headers","icolum","getHeaderProps","getSortByToggleProps","style","fontSize","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","icell","getCellProps","autoRemove","val","Table","OwnershipPage","props","useState","ownerships","setOwnerships","nro_propiedad","housing_complexe","type_ownership","block_mzna","ownership","formSearch","setFormSearch","housingComplexes","setHousingComplexes","blockMzna","setBlockMzna","typeOwnership","setTypeOwnership","inputRef","useRef","useEffect","fetchData","current","focus","Header","accessor","Cell","props1","modifyRegister","original","number","name","models","parkings","v","date_inscription_conservative","moment","format","date_delivery_ownership","ownership_client","last_names","id_client_lessee","lessee","promises","axios","get","API_URL","Promise","all","then","result","catch","err","response","toast","error","message","console","log","printCellarParking","dataPrint","string","forEach","dataUpdate","history","replace","fluid","sm","md","lg","xs","onSubmit","preventDefault","objectPost","Object","assign","post","inputNumber","handleChange","ref","inputHousingComplexe","inputTypeOwnership","inputBlock","inputOwnership","block","wb","xlsx","book_new","bodyTable","Props","Title","Subject","Author","CreatedDate","SheetNames","push","id_block_mzna","number_rooms","number_bathrooms","square_mtr","id_client_ownership","ws","aoa_to_sheet","Sheets","wbout","bookType","datos","s2ab","saveAs","Blob","color","defaultProps","required","label","messageErrors","cols"],"mappings":"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","file":"static/js/58.df347307.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .tr_cabecera{\r\n    background-color: rgb(218, 236, 242);\r\n    color: black;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, displayPaginationUp, letrasChicas }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {\r\n        displayPaginationUp ? (\r\n          <div className=\"pagination\">\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </Button>{' '}\r\n            <span>\r\n              Página{' '}\r\n              <strong>\r\n                {pageIndex + 1} de {pageOptions.length}\r\n              </strong>{' '}\r\n            </span>\r\n            <span className=\"ml-3\">\r\n              | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(page)\r\n                }}\r\n                className=\"inputPage\"\r\n                onChange={(e) => {\r\n                  if(e.target.value > pageOptions.length){\r\n                    e.target.value = 1\r\n                  }\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n              }}\r\n              className=\"inputPage\"\r\n            >\r\n              {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Mostrar {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : ''\r\n      }\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup,iHeader) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\" key={iHeader}>\r\n              {headerGroup.headers.map((column,icolum) => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"tr_cabecera\" style={{ fontSize: letrasChicas ? '14px' : '15px'}} key={icolum}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\" style={{ fontSize: letrasChicas ? '13px' : '15px' }}>\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()} key={i+'-'}>\r\n                  {row.cells.map((cell,icell) => {\r\n                    return <td {...cell.getCellProps()} key={icell+'td'}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,displayPaginationUp,letrasChicas}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} displayPaginationUp={displayPaginationUp} letrasChicas={letrasChicas} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  displayPaginationUp: PropTypes.bool,\r\n  letrasChicas: PropTypes.bool,\r\n}\r\n\r\nexport default Table\r\n","import React, { useMemo, useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport Table from 'components/Table'\r\nimport { toast } from 'react-toastify';\r\nimport { formatNumber, s2ab } from 'utils/functions'\r\nimport { saveAs } from 'file-saver'\r\nimport * as xlsx from 'xlsx'\r\nimport * as moment from 'moment-timezone'\r\nlet columns = []\r\n\r\nconst OwnershipPage = (props) => {\r\n\r\n  const [ownerships, setOwnerships] = useState([])\r\n  const [formSearch, setFormSearch] = useState({\r\n    nro_propiedad : '',\r\n    housing_complexe: '',\r\n    type_ownership: '',\r\n    block_mzna: '',\r\n    ownership: '',\r\n  })\r\n  const [housingComplexes, setHousingComplexes] = useState([])\r\n  const [blockMzna, setBlockMzna] = useState([])\r\n  const [typeOwnership, setTypeOwnership] = useState([])\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    fetchData()\r\n    inputRef.current.focus()\r\n    return () => {\r\n      columns = []\r\n    }\r\n\r\n  },[])\r\n\r\n  useMemo(() => {\r\n    columns = [\r\n      {\r\n        Header: 'Nro Propiedad',\r\n        accessor: 'number',\r\n        Cell: props1 => {\r\n          return(\r\n            <Button type=\"button\" size=\"sm\" variant=\"link\" onClick={() => modifyRegister(props1.cell.row.original) }>{props1.cell.row.original.number}</Button>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        Header: 'C.Hab',\r\n        accessor: props1 => [props1.housing_complexe.name]\r\n      },\r\n      {\r\n        Header: 'Tipo Propiedad',\r\n        accessor: props1 => [props1.typeOwnership.name]\r\n      },\r\n      {\r\n        Header: 'Block/Mzna',\r\n        accessor: 'block'\r\n      },\r\n      {\r\n        Header: 'Cant.Dormi',\r\n        accessor: 'number_rooms'\r\n      },\r\n      {\r\n        Header: 'Cant.Baños',\r\n        accessor: 'number_bathrooms'\r\n      },\r\n      {\r\n        Header: 'M2',\r\n        accessor: 'square_mtr'\r\n      },\r\n      {\r\n        Header: 'Modelo',\r\n        accessor: props1 => [props1.models.name]\r\n      },\r\n      {\r\n        Header: 'Esta',\r\n        accessor: props1 => props1.parkings.length > 0 ? props1.parkings.filter(v => v.type == 2).map(v => v.name) : '',\r\n      },\r\n      {\r\n        Header: 'Bodega',\r\n        accessor: props1 => props1.parkings.length > 0 ? props1.parkings.filter(v => v.type == 1).map(v => v.name) : ''\r\n      },\r\n      {\r\n        Header: 'Inscripción a Conservador',\r\n        accessor: props1 => props1.date_inscription_conservative ? [moment(props1.date_inscription_conservative).format('DD-MM-YYYY')] : ''\r\n      },\r\n      {\r\n        Header: 'Entrega a Propietario',\r\n        accessor: props1 => props1.date_delivery_ownership ? [moment(props1.date_delivery_ownership).format('DD-MM-YYYY')] : ''\r\n      },\r\n      {\r\n        Header: 'Propietario Rut',\r\n        accessor: 'id_client_ownership'\r\n      },\r\n      {\r\n        Header: 'Propietario Nombre',\r\n        accessor: props1 => props1.ownership_client ? [props1.ownership_client.name+' '+props1.ownership_client.last_names] : ''\r\n      },\r\n      {\r\n        Header: 'Arrendador',\r\n        accessor: props1 => props1.id_client_lessee ? [props1.lessee.name+' '+props1.lessee.last_names] : ''\r\n      },\r\n    ]\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = [\r\n      axios.get(API_URL+'housing_complexe'),\r\n      axios.get(API_URL+'master_block'),\r\n      axios.get(API_URL+'type_ownership'),\r\n      axios.get(API_URL+'masters_ownership'),\r\n    ]\r\n\r\n    Promise.all(promises).then(result => {\r\n\r\n      setHousingComplexes(result[0].data)\r\n      setBlockMzna(result[1].data)\r\n      setTypeOwnership(result[2].data)\r\n      setOwnerships(result[3].data)\r\n\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    setFormSearch({...formSearch, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    e.preventDefault();\r\n    let objectPost = Object.assign({},formSearch)\r\n\r\n    axios.post(API_URL+'masters_ownership_by_filter',objectPost).then(result => {\r\n      setOwnerships(result.data)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setFormSearch({\r\n      nro_propiedad : '',\r\n      housing_complexe: '',\r\n      type_ownership: '',\r\n      block_mzna: '',\r\n      ownership: '',\r\n    })\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/masters/ownerships/form')\r\n  }\r\n\r\n  const exportExcel = () => {\r\n\r\n      let wb = xlsx.utils.book_new()\r\n      let bodyTable = [['Nro Propiedad','C.Hab','Tipo Propiedad','Block/Mzna','Cant.Dormi','Cant.Baños','M2','Modelo','Estacionamiento','Bodega','Inscripción Conservador', 'Entrega a Propietario','Propietario Rut', 'Propietario Nombre','Arrendador']]\r\n\r\n      wb.Props = {\r\n        Title: \"Reporte de Propiedades\",\r\n        Subject: \"Exportación de Data\",\r\n        Author: 'Veanx tecnology',\r\n        CreatedDate: moment().format('YYYY-MM-DD')\r\n      };\r\n      wb.SheetNames.push(\"Propiedades\");\r\n\r\n      ownerships.forEach((v,i) => {\r\n        bodyTable.push([\r\n          v.number,\r\n          v.housing_complexe.name,\r\n          v.typeOwnership.name,\r\n          v.id_block_mzna ?  v.block.name : '',\r\n          v.number_rooms,\r\n          v.number_bathrooms,\r\n          v.square_mtr,\r\n          v.models.name,\r\n          printCellarParking(v.parkings,'parking'),\r\n          printCellarParking(v.parkings,'cellar'),\r\n          v.date_inscription_conservative ? moment(v.date_inscription_conservative).format('DD-MM-YYYY') : '',\r\n          v.date_delivery_ownership ? moment(v.date_delivery_ownership).format('DD-MM-YYYY') : '',\r\n          v.id_client_ownership,\r\n          v.ownership_client ? v.ownership_client.name+' '+v.ownership_client.last_names : '',\r\n          v.id_client_lessee ? v.lessee.name+' '+v.lessee.last_names : ''\r\n        ])\r\n      })\r\n\r\n      var ws = xlsx.utils.aoa_to_sheet(bodyTable);\r\n      wb.Sheets[\"Propiedades\"] = ws;\r\n      var wbout = xlsx.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n      let datos = s2ab(wbout)\r\n      saveAs(new Blob([datos],{type:\"application/octet-stream\"}), 'Reporte de Propiedades'+moment().format('DD-MM-YYYY')+'.xlsx')\r\n  }\r\n\r\n\r\n  const  printCellarParking = (dataPrint,type) => {\r\n    let string = \"\"\r\n    if(dataPrint.length > 0){\r\n      dataPrint.filter(v => type === \"parking\" ? v.type == 2 : v.type == 1).forEach((v, i) => {\r\n        string+= v.name+\" \\n\"\r\n      });\r\n    }\r\n\r\n    return string\r\n  }\r\n\r\n  const modifyRegister = dataUpdate => {\r\n    console.log(dataUpdate,'aqui');\r\n    props.history.replace('/masters/ownerships/form/'+dataUpdate.id)\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12} xs={12} className=\"\">\r\n          <h4 className=\"title_principal\">Propiedades</h4>\r\n          <hr/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row>\r\n              <InputFieldRef\r\n                {...props.inputNumber}\r\n                value={formSearch.nro_propiedad}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                {...props.inputHousingComplexe}\r\n                value={formSearch.housing_complexe}\r\n                handleChange={onChange}\r\n              >\r\n              <option value=''>--Seleccione--</option>\r\n                {housingComplexes.map((v,i) => (\r\n                  <option value={v.id}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n              <InputField\r\n                {...props.inputTypeOwnership}\r\n                value={formSearch.type_ownership}\r\n                handleChange={onChange}\r\n              >\r\n              <option value=''>--Seleccione--</option>\r\n                {typeOwnership.map((v,i) => (\r\n                  <option value={v.id}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputBlock}\r\n                value={formSearch.block_mzna}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                  {blockMzna.map((v,i) => (\r\n                    <option value={v.id}>{v.name}</option>\r\n                  ))}\r\n              </InputField>\r\n              <InputField\r\n                {...props.inputOwnership}\r\n                value={formSearch.ownership}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"secondary\" block={true}>Buscar</Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button type=\"button\" size=\"sm\" variant=\"secondary\" block={true} onClick={clearForm}>Limpiar Formulario</Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button type=\"button\" size=\"sm\" variant=\"secondary\" block={true} onClick={exportExcel}>Exportar a Excel</Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button type=\"button\" size=\"sm\" variant=\"secondary\" block={true} onClick={goToForm}>Nueva Propiedad</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12} xs={12}>\r\n          <br/><br/>\r\n          <h4 style={{color: 'blue'}}>Listado de Propiedades</h4>\r\n          <Table columns={columns} data={ownerships}  />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nOwnershipPage.defaultProps = {\r\n  inputNumber: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'nro_propiedad',\r\n    label : 'Nro. Propiedad',\r\n    messageErrors: [\r\n\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputHousingComplexe: {\r\n    type: 'select',\r\n    required: false,\r\n    name: 'housing_complexe',\r\n    label : 'Conjunto Habitacional',\r\n    messageErrors: [\r\n\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputTypeOwnership: {\r\n    type: 'select',\r\n    required: false,\r\n    name: 'type_ownership',\r\n    label : 'Tipo de Propiedad',\r\n    messageErrors: [\r\n\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputBlock: {\r\n    type: 'select',\r\n    required: false,\r\n    name: 'block_mzna',\r\n    label : 'Block/Mzna:',\r\n    messageErrors: [\r\n\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputOwnership: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'ownership',\r\n    label : 'Propietario',\r\n    messageErrors: [\r\n\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n}\r\n\r\nexport default OwnershipPage\r\n"],"sourceRoot":""}