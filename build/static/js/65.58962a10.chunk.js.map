{"version":3,"sources":["components/input/InputComponentRef.jsx","pages/masters/EnterpriseFormPage.jsx"],"names":["InputFieldRef","React","forwardRef","props","ref","classFormGroup","cols","type","Group","className","required","Label","label","Control","id","name","onChange","handleChange","value","placeholder","readOnly","readonly","step","onKeyUp","handleKeyUp","disabled","Feedback","messageErrors","map","v","i","key","as","multiple","children","rows","EnterpriseFormPage","useState","validated","setValidated","rut","spin","email","phone_1","phone_2","address","is_active","data","setData","inputRef","useRef","useEffect","fetchData","current","focus","match","params","axios","get","API_URL","then","result","catch","err","response","NotificationManager","error","message","console","log","e","target","checked","gotBackToTable","history","replace","clearForm","sm","md","lg","xs","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","put","success","post","noValidate","inputRut","inputName","inputSpin","inputAddress","inputEmail","inputPhone","inputPhone2","style","fontWeight","size","variant","block","onClick","defaultProps"],"mappings":"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","file":"static/js/65.58962a10.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          className={props.className ? props.className : ''}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, { useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { NotificationManager } from 'react-notifications'\r\n\r\nconst EnterpriseFormPage = (props) => {\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const [data, setData] = useState({\r\n    name:'',\r\n    rut: '',\r\n    spin: '',\r\n    email: '',\r\n    phone_1: '',\r\n    phone_2: '',\r\n    address: '',\r\n    is_active: true\r\n  })\r\n  const inputRef = useRef(null)\r\n  useEffect(() => {\r\n    fetchData()\r\n    inputRef.current.focus()\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = []\r\n    if(props.match.params.id){\r\n      axios.get(API_URL+'enterprise/'+props.match.params.id).then(result => {\r\n\r\n        setData({\r\n          name: result.data.name,\r\n          rut: result.data.rut,\r\n          email: result.data.email,\r\n          spin: result.data.spin,\r\n          phone_1: result.data.phone_1,\r\n          phone_2: result.data.phone_2,\r\n          address: result.data.address,\r\n          is_active: result.data.is_active,\r\n          id: result.data.id\r\n        })\r\n\r\n      }).catch(err => {\r\n        if(err.response){\r\n          NotificationManager.error(err.response.data.message)\r\n        }else{\r\n          console.log(err);\r\n          NotificationManager.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    if(e.target.name === 'is_active'){\r\n      setData({...data, [e.target.name]: e.target.checked})\r\n    }else{\r\n      setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},data)\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'enterprise/'+objectPost.id,objectPost).then(result => {\r\n        NotificationManager.success('Registro Modificado')\r\n        gotBackToTable()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          NotificationManager.error(err.response.data.message)\r\n        }else{\r\n          NotificationManager.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'enterprise',objectPost).then(result => {\r\n        NotificationManager.success('Registro Creado')\r\n        clearForm()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          NotificationManager.error(err.response.data.message)\r\n        }else{\r\n          NotificationManager.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const gotBackToTable = () => {\r\n    props.history.replace('/masters/enterprise')\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name:'',\r\n      rut: '',\r\n      email: '',\r\n      phone_1: '',\r\n      phone_2: '',\r\n      address: '',\r\n      spin: '',\r\n      is_active: true,\r\n    })\r\n    setValidated(false)\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12} xs={12} className=\"text-right\">\r\n          <span className=\"text-danger\">*Campos Obligatorios</span>\r\n          <br/><br/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n            <Row>\r\n              <InputFieldRef\r\n                {...props.inputRut}\r\n                value={data.rut}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                {...props.inputName}\r\n                value={data.name}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputSpin}\r\n                value={data.spin}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputAddress}\r\n                value={data.address}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputEmail}\r\n                value={data.email}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPhone}\r\n                value={data.phone_1}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputPhone2}\r\n                value={data.phone_2}\r\n                handleChange={onChange}\r\n              />\r\n              <Form.Group className=\"col-md-6 col-sm-6 col-lg-6 col-6\">\r\n                <Form.Label style={{fontWeight: 'bold'}}>Empresa Activa?</Form.Label>\r\n                <br/>\r\n                <input type=\"checkbox\" name=\"is_active\" checked={data.is_active} onChange={onChange} value={data.is_active} />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" block={true}>Guardar</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"danger\" block={true} onClick={gotBackToTable}>Volver</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nEnterpriseFormPage.defaultProps = {\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputSpin: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'spin',\r\n    label : 'Giro',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputAddress: {\r\n    type: 'textarea',\r\n    required: true,\r\n    name: 'address',\r\n    label : 'Dirección',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: true,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*,',' Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_1',\r\n    label : 'Teléfono Principal',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone2: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_2',\r\n    label : 'Telefono Secundario',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n}\r\n\r\nexport default EnterpriseFormPage\r\n"],"sourceRoot":""}