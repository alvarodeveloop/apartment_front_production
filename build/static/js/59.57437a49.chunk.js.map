{"version":3,"sources":["components/Table.jsx","pages/indicators/IndicatorByMultipleProyectsPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","displayPaginationUp","letrasChicas","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","iHeader","getHeaderGroupProps","headers","icolum","getHeaderProps","getSortByToggleProps","style","fontSize","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","icell","getCellProps","autoRemove","val","Table","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","title","display","data_housing_ss_by_status","labels","datasets","data_housing_tipology_failure","data_housing_status_failure","IndicatorByMultipleProyectsPage","props","useState","id_housing_complexe","date_from","date_to","id_status","formData","setFormData","textButton","validated","setValidated","housingComplexes","setHousingComplexes","totales","housingSsByStatus","setHousingSsByStatus","failureByTipology","setFailureByTipology","failureByTipologyStatus","setFailureByTipologyStatus","redraw","setRedraw","chargeDataCharts","setChargeDataCharts","statusSS","setStatusSS","tipolgiesTable","setTipolgiesTable","showForm","setShowForm","failureStatus","setFailureStatus","showButtons","setShowButtons","useEffect","fetchData","handleBarFailuresByTipology","handleBarFailuresByTipologyHousing","handleBarFailuresByStatus","setTimeout","promises","axios","get","API_URL","Promise","all","then","result","catch","err","response","toast","error","message","console","log","forEach","v","push","label","housing","backgroundColor","ARRAY_COLORS","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","pendiente1","ejecucion1","no_aplica1","cerrada1","name","ss_pendiente","ss_inspeccion","ss_ejecucion","ss_no_aplica","ss_cerrada","item","arreglo_data_columna","persist","arreglo","options","selected","displayTrTipologyMultipleHousing","tipology","total_total","td","parseFloat","item1","i1","displayTrFailureStatusMultipleHousing","total","fluid","sm","md","lg","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","post","housing_ss_by_status","housing_ss_by_status_totales","tipology_by_multiple_housings","failures_by_status","tipology_by_status","noValidate","required","cols","messageErrors","handleChange","multiple","status","block","parseInt","displayStatus","moment","format","colSpan","date_municipal_reception","porcentaje","v1","pendiente","ejecucion","no_aplica","cerrada","window","print"],"mappings":"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","file":"static/js/59.57437a49.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .tr_cabecera{\r\n    background-color: rgb(218, 236, 242);\r\n    color: black;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, displayPaginationUp, letrasChicas }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {\r\n        displayPaginationUp ? (\r\n          <div className=\"pagination\">\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </Button>{' '}\r\n            <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </Button>{' '}\r\n            <span>\r\n              Página{' '}\r\n              <strong>\r\n                {pageIndex + 1} de {pageOptions.length}\r\n              </strong>{' '}\r\n            </span>\r\n            <span className=\"ml-3\">\r\n              | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(page)\r\n                }}\r\n                className=\"inputPage\"\r\n                onChange={(e) => {\r\n                  if(e.target.value > pageOptions.length){\r\n                    e.target.value = 1\r\n                  }\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n              }}\r\n              className=\"inputPage\"\r\n            >\r\n              {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Mostrar {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : ''\r\n      }\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup,iHeader) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\" key={iHeader}>\r\n              {headerGroup.headers.map((column,icolum) => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"tr_cabecera\" style={{ fontSize: letrasChicas ? '14px' : '15px'}} key={icolum}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\" style={{ fontSize: letrasChicas ? '13px' : '15px' }}>\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()} key={i+'-'}>\r\n                  {row.cells.map((cell,icell) => {\r\n                    return <td {...cell.getCellProps()} key={icell+'td'}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,displayPaginationUp,letrasChicas}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} displayPaginationUp={displayPaginationUp} letrasChicas={letrasChicas} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  displayPaginationUp: PropTypes.bool,\r\n  letrasChicas: PropTypes.bool,\r\n}\r\n\r\nexport default Table\r\n","import React, {useState, useEffect, useMemo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport{\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  DropdownButton,\r\n  Dropdown\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport * as moment from 'moment-timezone'\r\nimport 'styles/pages/indicatorPage.css'\r\nimport {Doughnut,Bar} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS } from 'utils/constants'\r\nlet total_tipology_housing_failure = 0\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n  title: {\r\n   display: true,\r\n   text: \"Total Solicitudes por Proyecto\"\r\n  }\r\n}\r\n\r\nlet data_housing_ss_by_status = {\r\n  labels: ['Pendiente','Inspección','Ejecución','No Aplica','Cerrada'],\r\n  datasets: []\r\n};\r\n\r\nlet data_housing_tipology_failure = {\r\n  labels: [],\r\n  datasets: []\r\n}\r\n\r\nlet data_housing_status_failure = {\r\n  labels: ['Pendiente','Ejecución','No Aplica','Cerrada'],\r\n  datasets: []\r\n}\r\n\r\nconst IndicatorByMultipleProyectsPage = (props) => {\r\n  const [formData,setFormData] = useState({\r\n    id_housing_complexe: [],\r\n    date_from : '',\r\n    date_to: '',\r\n    id_status : ''\r\n  })\r\n  const [textButton, setTextButton] = useState('Buscar...')\r\n  const [validated, setValidated] = useState(false)\r\n  const [housingComplexes, setHousingComplexes] = useState([])\r\n  const [housingData, setHousingData] = useState({})\r\n  const [housingSsByStatus, setHousingSsByStatus] = useState({\r\n    data: [],\r\n    totales: []\r\n  })\r\n  const [failureByTipology, setFailureByTipology] = useState([])\r\n  const [failureByTipologyStatus, setFailureByTipologyStatus] = useState([])\r\n  const [redraw,setRedraw] = useState(false)\r\n  const [chargeDataCharts,setChargeDataCharts] = useState(false)\r\n  const [statusSS, setStatusSS] = useState([])\r\n  const [tipolgiesTable, setTipolgiesTable] = useState([])\r\n  const [showForm,setShowForm] = useState(true)\r\n  const [failureStatus, setFailureStatus] = useState([])\r\n  const [showButtons, setShowButtons] = useState(true)\r\n\r\n  useEffect(() => {\r\n    \r\n    fetchData()\r\n    return () => {\r\n\r\n      data_housing_ss_by_status = {\r\n        labels: ['Pendiente','Inspección','Ejecución','No Aplica','Cerrada'],\r\n        datasets: []\r\n      };\r\n\r\n      data_housing_ss_by_status = {\r\n        labels: ['Pendiente','Inspección','Ejecución','No Aplica','Cerrada'],\r\n        datasets: []\r\n      };\r\n\r\n      data_housing_tipology_failure = {\r\n        labels: [],\r\n        datasets: []\r\n      }\r\n\r\n      data_housing_status_failure = {\r\n        labels: ['Pendiente','Ejecución','No Aplica','Cerrada'],\r\n        datasets: []\r\n      }\r\n\r\n      total_tipology_housing_failure = 0\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(chargeDataCharts){\r\n      handleBarFailuresByTipology()\r\n      handleBarFailuresByTipologyHousing()\r\n      handleBarFailuresByStatus()\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n      },500);\r\n    }\r\n  },[chargeDataCharts])\r\n\r\n  const fetchData = () => {\r\n\r\n    let promises = [\r\n      axios.get(API_URL+'housing_complexe'),\r\n      axios.get(API_URL+'get_status_close'),\r\n      axios.get(API_URL+'params_manage_problems_tipology_by_type/'+1),\r\n    ]\r\n\r\n    Promise.all(promises).then(result => {\r\n      setHousingComplexes(result[0].data)\r\n      setStatusSS(result[1].data)\r\n      setTipolgiesTable(result[2].data)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const handleBarFailuresByStatus = () => {\r\n\r\n    failureStatus.forEach((v,i) => {\r\n      data_housing_status_failure.datasets.push({\r\n        label: v.housing,\r\n        backgroundColor: ARRAY_COLORS[i],\r\n        borderColor: ARRAY_COLORS[i],\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: ARRAY_COLORS[i],\r\n        hoverBorderColor: ARRAY_COLORS[i],\r\n        data: [v.pendiente1,v.ejecucion1,v.no_aplica1,v.cerrada1]\r\n      });\r\n    })\r\n  }\r\n\r\n  const handleBarFailuresByTipology = () => {\r\n\r\n    housingSsByStatus.data.forEach((v,i) => {\r\n      data_housing_ss_by_status.datasets.push({\r\n        label: v.name,\r\n        backgroundColor: ARRAY_COLORS[i],\r\n        borderColor: ARRAY_COLORS[i],\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: ARRAY_COLORS[i],\r\n        hoverBorderColor: ARRAY_COLORS[i],\r\n        data: [v.ss_pendiente,v.ss_inspeccion,v.ss_ejecucion,v.ss_no_aplica,v.ss_cerrada]\r\n      });\r\n    })\r\n  }\r\n\r\n  const handleBarFailuresByTipologyHousing = () => {\r\n\r\n    tipolgiesTable.forEach((item, i) => {\r\n      data_housing_tipology_failure.labels.push(item.name)\r\n    });\r\n    let arreglo_data_columna = []\r\n\r\n    failureByTipology.forEach((v,i) => {\r\n      arreglo_data_columna = []\r\n      tipolgiesTable.forEach((item, i) => {\r\n        arreglo_data_columna.push(v[item.name+\"1\"])\r\n      })\r\n\r\n      data_housing_tipology_failure.datasets.push({\r\n        label: v.housing,\r\n        backgroundColor: ARRAY_COLORS[i],\r\n        borderColor: ARRAY_COLORS[i],\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: ARRAY_COLORS[i],\r\n        hoverBorderColor: ARRAY_COLORS[i],\r\n        data: arreglo_data_columna\r\n      });\r\n\r\n      arreglo_data_columna = []\r\n\r\n    })\r\n  }\r\n\r\n  const onChange = e => {\r\n    e.persist()\r\n    if(e.target.name === \"id_housing_complexe\"){\r\n      let arreglo = []\r\n      for (var i = 0; i < e.target.options.length; i++) {\r\n        if(e.target.options[i].selected){\r\n          arreglo.push(e.target.options[i].value)\r\n        }\r\n      }\r\n      setFormData({...formData, [e.target.name] : arreglo})\r\n    }else{\r\n      setFormData({...formData, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const onSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},formData)\r\n\r\n    axios.post(API_URL+'indicators_by_multiple_proyect',objectPost).then(result => {\r\n      setHousingSsByStatus({data: result.data.housing_ss_by_status, totales: result.data.housing_ss_by_status_totales})\r\n      setFailureByTipology(result.data.tipology_by_multiple_housings)\r\n      setFailureStatus(result.data.failures_by_status)\r\n      setFailureByTipologyStatus(result.data.tipology_by_status)\r\n      setShowForm(false)\r\n      setTimeout(function () {\r\n        setChargeDataCharts(true)\r\n      }, 500);\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err);\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  const displayStatus = () => {\r\n    let val = \"Todos los estados\"\r\n    switch (parseInt(formData.id_status,10)) {\r\n      case 1:\r\n        val = \"Pendiente\"\r\n      break;\r\n      case 2:\r\n        val = \"Inspección\"\r\n      break;\r\n      case 3:\r\n        val = \"Ejecución\"\r\n      break;\r\n      case 4:\r\n        val = \"No Aplica\"\r\n      break;\r\n      case 5:\r\n        val = \"Cerrada\"\r\n      break;\r\n      case 6:\r\n        val = \"Anulada\"\r\n      break;\r\n      case 7:\r\n        val = \"En proceso\"\r\n      break;\r\n    }\r\n\r\n    return val\r\n  }\r\n\r\n  const show_total_registers = (dataRegisters,type = false) => {\r\n    let val = 0\r\n    if(!type){\r\n      dataRegisters.forEach((item, i) => {\r\n        val = val + item.total\r\n      });\r\n      return val\r\n    }else{\r\n      switch (type) {\r\n        case \"pendiente\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_pendiente\r\n          });\r\n        break;\r\n        case \"ejecucion\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_ejecucion\r\n          });\r\n        break\r\n        case \"no_aplica\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_no_aplica\r\n          });\r\n        break\r\n        case \"Cerrada\":\r\n          dataRegisters.forEach((item, i) => {\r\n            val = val + item.total_cerrada\r\n          });\r\n        break\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  const handleShowForm = () => {\r\n\r\n    data_housing_ss_by_status = {\r\n      labels: ['Pendiente','Inspección','Ejecución','No Aplica','Cerrada'],\r\n      datasets: []\r\n    };\r\n    data_housing_tipology_failure = {\r\n      labels: [],\r\n      datasets: []\r\n    }\r\n    data_housing_status_failure = {\r\n      labels: ['Pendiente','Ejecución','No Aplica','Cerrada'],\r\n      datasets: []\r\n    }\r\n    total_tipology_housing_failure= 0\r\n    setShowForm(true)\r\n    setRedraw(false)\r\n    setChargeDataCharts(false)\r\n  }\r\n\r\n  const printIndicator = () => {\r\n    setShowButtons(false)\r\n    setTimeout(function () {\r\n      window.print()\r\n    }, 400);\r\n    setTimeout(function () {\r\n      setShowButtons(true)\r\n    }, 1500);\r\n  }\r\n\r\n  const displayTrTipologyMultipleHousing = tipology => {\r\n    let total_total = 0\r\n    let html = \"\"\r\n    let td = \"\"\r\n    if(tipology !== \"total\"){\r\n      failureByTipology.forEach((item, i) => {\r\n        if(i === 0){\r\n          total_tipology_housing_failure+= parseFloat(item[tipology + \"_total\"])\r\n          td = (<td className=\"text-right\" key={i+tipology}>{item[tipology + \"_total\"]}</td>)\r\n        }\r\n      });\r\n    }else{\r\n      failureByTipology.forEach((item, i) => {\r\n        if(i === 0){\r\n          tipolgiesTable.forEach((item1, i1) => {\r\n              total_total+= parseFloat(item[item1.name+\"_total\"])\r\n          });\r\n          td = (<td className=\"text-right\" key={i+\"total\"}>{total_total}</td>)\r\n        }\r\n      });\r\n    }\r\n\r\n    return td\r\n  }\r\n\r\n  const displayTrFailureStatusMultipleHousing = name => {\r\n    let total_total = 0\r\n    let html = \"\"\r\n    let td = \"\"\r\n    if(name !== \"total\"){\r\n      failureStatus.forEach((item, i) => {\r\n        total_total+= parseFloat(item[name+\"1\"])\r\n      });\r\n      td = (<td className=\"text-right\" key={name+\"_1\"}>{total_total}</td>)\r\n    }else{\r\n      failureStatus.forEach((item, i) => {\r\n        total_total+= parseFloat(item.total)\r\n      });\r\n      td = (<td className=\"text-right\" key={name+\"_1\"}>{total_total}</td>)\r\n    }\r\n\r\n    return td\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"text-center title_principal\">INDICADORES DE POSTVENTA (Por Multiples Proyectos y Rango de Fecha)</h4>\r\n        </Col>\r\n        {/* formulario ==================== */}\r\n        <Col sm={12} md={12} lg={12} style={{display: showForm ? \"block\" : \"none\"}}>\r\n         <Form onSubmit={onSubmit} noValidate validated={validated}>\r\n          <Row>\r\n            <InputFieldRef\r\n              type=\"select\"\r\n              name=\"id_housing_complexe\"\r\n              label=\"Proyecto\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.id_housing_complexe}\r\n              handleChange={onChange}\r\n              multiple={true}\r\n            >\r\n              {housingComplexes.map((v,i) => (\r\n                <option value={v.id} key={i}>{v.name}</option>\r\n              ))}\r\n            </InputFieldRef>\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"date_from\"\r\n              label=\"Desde\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.date_from}\r\n              handleChange={onChange}\r\n            />\r\n            <InputField\r\n              type=\"date\"\r\n              name=\"date_to\"\r\n              label=\"Hasta\"\r\n              required={true}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                'Requerido*'\r\n              ]}\r\n              value={formData.date_to}\r\n              handleChange={onChange}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <InputField\r\n              type=\"select\"\r\n              name=\"id_status\"\r\n              label=\"Status\"\r\n              required={false}\r\n              cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n              messageErrors={[\r\n                ''\r\n              ]}\r\n              value={formData.id_status}\r\n              handleChange={onChange}\r\n            >\r\n              <option value=\"\">--Seleccione--</option>\r\n              {statusSS.map((v,i) => (\r\n                <option key={i} value={v.id}>{v.status}</option>\r\n              ))}\r\n              <option value=\"4\">No aplica</option>\r\n            </InputField>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Button variant=\"secondary\" block={true} size=\"sm\" type=\"submit\">{textButton}</Button>\r\n            </Col>\r\n          </Row>\r\n         </Form>\r\n        </Col>\r\n        {/* Fin col 12 del formulario ==================== */}\r\n        <Col sm={12} md={12} lg={12} style={{display : showForm ? \"none\" : \"block\"}}>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={4} md={4} lg={4}>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>Estado:&nbsp;&nbsp;</b> {displayStatus()}\r\n              </Col>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>Fecha Inicio:&nbsp;&nbsp;</b>{moment(formData.date_from).format('DD-MM-YYYY')}\r\n              </Col>\r\n              <Col sm={12} md={12} lg={12}>\r\n                <b>Fecha Término:&nbsp;&nbsp;</b>{moment(formData.date_to).format('DD-MM-YYYY')}\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          {/* Tabla ss estado ============================= */}\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"10\">Total de Solicitudes por Proyecto y Estado</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Proyecto Inmobiliario</th>\r\n                    <th className=\"th_class\">Fecha RM</th>\r\n                    <th className=\"th_class\">Pendiente</th>\r\n                    <th className=\"th_class\">Inspección</th>\r\n                    <th className=\"th_class\">Ejecución</th>\r\n                    <th className=\"th_class\">No Aplica</th>\r\n                    <th className=\"th_class\">Cerrada</th>\r\n                    <th className=\"th_class\">Total</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                    <th className=\"th_class\">Anulada</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {housingSsByStatus.data.map((v,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v.name}</td>\r\n                        <td>{moment(v.date_municipal_reception).format('DD-MM-YYYY')}</td>\r\n                        <td className=\"text-right\">{v.ss_pendiente}</td>\r\n                        <td className=\"text-right\">{v.ss_inspeccion}</td>\r\n                        <td className=\"text-right\">{v.ss_ejecucion}</td>\r\n                        <td className=\"text-right\">{v.ss_no_aplica}</td>\r\n                        <td className=\"text-right\">{v.ss_cerrada}</td>\r\n                        <td className=\"text-right\">{v.total_total}</td>\r\n                        <td className=\"text-right\">{v.porcentaje}%</td>\r\n                        <td className=\"text-right\">0</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  {housingSsByStatus.totales.length > 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"2\"><b>Totales</b></td>\r\n                      <td className=\"text-right\">{housingSsByStatus.totales[0].ss_pendiente}</td>\r\n                      <td className=\"text-right\">{housingSsByStatus.totales[0].ss_inspeccion}</td>\r\n                      <td className=\"text-right\">{housingSsByStatus.totales[0].ss_ejecucion}</td>\r\n                      <td className=\"text-right\">{housingSsByStatus.totales[0].ss_no_aplica}</td>\r\n                      <td className=\"text-right\">{housingSsByStatus.totales[0].ss_cerrada}</td>\r\n                      <td className=\"text-right\">{housingSsByStatus.totales[0].total_total}</td>\r\n                      <td className=\"text-right\"><b>100%</b></td>\r\n                      <td></td>\r\n                    </tr>\r\n                  ) : ''}\r\n                  <tr>\r\n                    <td colSpan=\"10\">Se omiten la(s) S.S. Anulada(s): 0</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <Bar data={data_housing_ss_by_status} redraw={redraw} options ={optionsBar}/>\r\n            </Col>\r\n          </Row>\r\n          {/* fin tabla housing ss status */}\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan={tipolgiesTable.length + 4}>Total de Fallas(Observaciones) por Proyecto y Tipologia</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Proyecto Inmobiliario</th>\r\n                    <th className=\"th_class\">Fecha RM</th>\r\n                    {tipolgiesTable.map((v,i) => (\r\n                      <th className=\"th_class\" key={i}>{v.name}</th>\r\n                    ))}\r\n                    <th className=\"th_class\">Total</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {failureByTipology.map((v,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v.housing}</td>\r\n                        <td>{moment(v.date_municipal_reception).format('DD-MM-YYYY')}</td>\r\n                        {tipolgiesTable.map((v1,i1) => {\r\n                          return (<td className=\"text-right\" key={i1}>{v[v1.name+'1']}</td>)\r\n                        })}\r\n                        <td className=\"text-right\">{v.total}</td>\r\n                        <td className=\"text-right\">{v.porcentaje}</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td colSpan=\"2\"><b>Totales: </b></td>\r\n                    {tipolgiesTable.map((v1,i1) => (\r\n                      displayTrTipologyMultipleHousing(v1.name)\r\n                    ))}\r\n                    {displayTrTipologyMultipleHousing('total')}\r\n                    <td className=\"text-right\"><b>100%</b></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <Bar data={data_housing_tipology_failure} redraw={redraw} options ={optionsBar}/>\r\n            </Col>\r\n          </Row>\r\n          {/* fin tabla de fallas por tipologia y proyecto */}\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"8\">Total de Fallas(Observaciones) por Proyecto y Estado</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Proyecto Inmobiliario</th>\r\n                    <th className=\"th_class\">Fecha RM</th>\r\n                    <th className=\"th_class\">Pendiente</th>\r\n                    <th className=\"th_class\">Ejecución</th>\r\n                    <th className=\"th_class\">No Aplica</th>\r\n                    <th className=\"th_class\">Cerrada</th>\r\n                    <th className=\"th_class\">Total</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {failureStatus.map((v,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v.housing}</td>\r\n                        <td>{moment(v.date_municipal_reception).format('DD-MM-YYYY')}</td>\r\n                        <td className=\"text-right\">{v.pendiente1}</td>\r\n                        <td className=\"text-right\">{v.ejecucion1}</td>\r\n                        <td className=\"text-right\">{v.no_aplica1}</td>\r\n                        <td className=\"text-right\">{v.cerrada1}</td>\r\n                        <td className=\"text-right\">{v.total}</td>\r\n                        <td className=\"text-right\">{v.porcentaje}%</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td colSpan=\"2\"><b>Totales: </b></td>\r\n                    {displayTrFailureStatusMultipleHousing('pendiente')}\r\n                    {displayTrFailureStatusMultipleHousing('ejecucion')}\r\n                    {displayTrFailureStatusMultipleHousing('no_aplica')}\r\n                    {displayTrFailureStatusMultipleHousing('cerrada')}\r\n                    {displayTrFailureStatusMultipleHousing('total')}\r\n                    <td className=\"text-right\"><b>100%</b></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <Bar data={data_housing_status_failure} redraw={redraw} options ={optionsBar}/>\r\n            </Col>\r\n          </Row>\r\n          {/* fin tabla de fallas por estado y proyecto */}\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"header_th_classs\" colSpan=\"7\">Total de Fallas(Observaciones) por Tipología y Estado</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"th_class\">Tipologias</th>\r\n                    <th className=\"th_class\">Pendiente</th>\r\n                    <th className=\"th_class\">Ejecución</th>\r\n                    <th className=\"th_class\">No Aplica</th>\r\n                    <th className=\"th_class\">Cerrada</th>\r\n                    <th className=\"th_class\">Total</th>\r\n                    <th className=\"th_class\">Porcentaje</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"\">\r\n                  {failureByTipologyStatus.map((v,i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{v.name}</td>\r\n                        <td className=\"text-right\">{v.pendiente}</td>\r\n                        <td className=\"text-right\">{v.ejecucion}</td>\r\n                        <td className=\"text-right\">{v.no_aplica}</td>\r\n                        <td className=\"text-right\">{v.cerrada}</td>\r\n                        <td className=\"text-right\">{v.total}</td>\r\n                        <td className=\"text-right\">{v.porcentaje}%</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          {/* fin tabla tipologia y status */}\r\n          <br/><br/>\r\n          {\r\n            showButtons ? (\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"secondary\" size=\"sm\" block={true} onClick={printIndicator}>Imprimir Pdf</Button>\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button variant=\"secondary\" size=\"sm\" block={true} onClick={handleShowForm}>Nueva Consulta</Button>\r\n                </Col>\r\n              </Row>\r\n\r\n            ) : ''\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndicatorByMultipleProyectsPage\r\n"],"sourceRoot":""}