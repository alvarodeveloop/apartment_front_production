{"version":3,"sources":["components/input/InputComponentRef.jsx","components/ClientFormComponent.jsx","pages/masters/ClientFormPage.jsx"],"names":["InputFieldRef","React","forwardRef","props","ref","classFormGroup","cols","type","Group","className","required","Label","label","Control","id","name","onChange","handleChange","value","placeholder","readOnly","readonly","step","onKeyUp","handleKeyUp","disabled","Feedback","messageErrors","map","v","i","key","as","multiple","children","rows","ClientFormComponent","useState","validated","setValidated","last_names","rut","email","id_city","id_country","poblation","phone_1","phone_2","address","data","setData","countrys","setCountrys","citys","setCitys","inputRef","useRef","useEffect","fetchData","current","focus","promises","axios","get","API_URL","match","params","push","Promise","all","then","result","a","propCity","find","cities","catch","err","response","NotificationManager","error","message","e","persist","target","propCitys","val","split","join","substring","length","gotBackToTable","isModal","showTable","history","replace","clearForm","sm","md","lg","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","put","success","post","noValidate","inputRut","inputName","inputLastNames","inputAddress","inputPoblation","inputEmail","inputPhone","inputPhone2","inputCountry","inputCity","size","variant","block","onClick","defaultProps","ClientFormPage"],"mappings":"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","file":"static/js/61.de5420e9.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          className={props.className ? props.className : ''}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        {\r\n          props.required ? (\r\n            <Form.Label className=\"fontBold\"><span className=\"asterisk_red\">*</span>{props.label}</Form.Label>\r\n          ) : (\r\n            <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n          )\r\n        }\r\n        <Form.Control\r\n          id={props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className=\"form-control-sm\"\r\n          disabled={props.disabled}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          (\r\n            {\r\n              props.messageErrors.map((v,i) => {\r\n                return <span key={i} className=\"error-input\">{v}</span>\r\n              })\r\n            }\r\n          )\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, { useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { NotificationManager } from 'react-notifications'\r\n\r\nconst ClientFormComponent = (props) => {\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const [data, setData] = useState({\r\n    name:'',\r\n    last_names: '',\r\n    rut: '',\r\n    email: '',\r\n    id_city:'',\r\n    id_country: '',\r\n    poblation: '',\r\n    phone_1: '',\r\n    phone_2: '',\r\n    address: ''\r\n  })\r\n  const [countrys,setCountrys] = useState([])\r\n  const [citys,setCitys] = useState([])\r\n  const inputRef = useRef(null)\r\n  useEffect(() => {\r\n    fetchData()\r\n    inputRef.current.focus()\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = [\r\n      axios.get(API_URL+'master_countrys')\r\n    ]\r\n    if(props.match.params.id){\r\n      promises.push(\r\n        axios.get(API_URL+'client/'+props.match.params.id)\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(async result => {\r\n      setCountrys(result[0].data)\r\n      if(result[1]){\r\n        setData({\r\n          name: result[1].data.name,\r\n          last_names: result[1].data.last_names,\r\n          rut: result[1].data.rut,\r\n          email: result[1].data.email,\r\n          id_city: result[1].data.id_city,\r\n          id_country: result[1].data.id_country,\r\n          poblation: result[1].data.poblation,\r\n          phone_1: result[1].data.phone_1,\r\n          phone_2: result[1].data.phone_2,\r\n          address: result[1].data.address,\r\n          id: result[1].data.id\r\n        })\r\n\r\n        setCitys(propCity => {\r\n          return result[0].data.find(v => v.id == result[1].data.id_country).cities\r\n        })\r\n      }\r\n    }).catch(err => {\r\n      if(err.response){\r\n        NotificationManager.error(err.response.data.message)\r\n      }else{\r\n        NotificationManager.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    e.persist()\r\n\r\n    if(e.target.name === \"id_country\"){\r\n      setCitys(propCitys => {\r\n        return countrys.find(v => v.id == e.target.value).cities\r\n      })\r\n      setData({...data, id_country: e.target.value, id_city: ''})\r\n    }else if(e.target.name === \"rut\"){\r\n      let val = e.target.value\r\n      val = val.split('-').join('')\r\n      if(val){\r\n        val = val.substring(0, val.length - 1)+'-'+val.substring(val.length - 1)\r\n      }\r\n      setData({...data, rut: val})\r\n    }else{\r\n      setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},data)\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'client/'+objectPost.id,objectPost).then(result => {\r\n        NotificationManager.success('Registro Modificado')\r\n        gotBackToTable()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          NotificationManager.error(err.response.data.message)\r\n        }else{\r\n          NotificationManager.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'client',objectPost).then(result => {\r\n        NotificationManager.success('Registro Creado')\r\n        clearForm()\r\n        if(props.isModal){\r\n          gotBackToTable(true)\r\n        }\r\n      }).catch(err => {\r\n        if(err.response){\r\n          NotificationManager.error(err.response.data.message)\r\n        }else{\r\n          NotificationManager.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const gotBackToTable = type => {\r\n    if(props.isModal){\r\n      props.showTable(type)\r\n    }else{\r\n      props.history.replace('/masters/clients')\r\n    }\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name:'',\r\n      last_names: '',\r\n      rut: '',\r\n      email: '',\r\n      id_city:'',\r\n      id_country: '',\r\n      poblation: '',\r\n      phone_1: '',\r\n      phone_2: '',\r\n      address: ''\r\n    })\r\n    setValidated(false)\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"\">\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n            <Row>\r\n              <InputFieldRef\r\n                {...props.inputRut}\r\n                value={data.rut}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                {...props.inputName}\r\n                value={data.name}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputLastNames}\r\n                value={data.last_names}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputAddress}\r\n                value={data.address}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPoblation}\r\n                value={data.poblation}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputEmail}\r\n                value={data.email}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputPhone}\r\n                value={data.phone_1}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPhone2}\r\n                value={data.phone_2}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputCountry}\r\n                value={data.id_country}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {countrys.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n              <InputField\r\n                {...props.inputCity}\r\n                value={data.id_city}\r\n                handleChange={onChange}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {citys.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" block={true}>Guardar</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"danger\" block={true} onClick={() => {gotBackToTable(false) }}>Volver</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nClientFormComponent.propTypes = {\r\n  isModal : PropTypes.bool.isRequired,\r\n  showTable: PropTypes.func.isRequired\r\n}\r\n\r\nClientFormComponent.defaultProps = {\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputLastNames: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'last_names',\r\n    label : 'Apellidos',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPoblation: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'poblation',\r\n    label : 'Población',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputAddress: {\r\n    type: 'textarea',\r\n    required: false,\r\n    name: 'address',\r\n    label : 'Dirección',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputCountry: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_country',\r\n    label : 'País',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputCity: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_city',\r\n    label : 'Ciudad',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: false,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*,',' Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_1',\r\n    label : 'Teléfono Principal',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputPhone2: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_2',\r\n    label : 'Telefono Secundario',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n}\r\n\r\nexport default ClientFormComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ClientFormComponent from 'components/ClientFormComponent'\r\nimport {\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap'\r\n\r\nconst ClientFormPage = (props) => {\r\n  return (\r\n    <Row className=\"containerDiv\">\r\n      <Col sm={12} md={12} lg={12}>\r\n        <ClientFormComponent isModal={false} showTable={() => {}} {...props}/>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ClientFormPage\r\n"],"sourceRoot":""}