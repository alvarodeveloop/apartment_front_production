{"version":3,"sources":["pages/masters/EnterpriseFormPage.jsx"],"names":["EnterpriseFormPage","props","useState","validated","setValidated","name","rut","spin","email","phone_1","phone_2","address","is_active","data","setData","inputRef","useRef","useEffect","fetchData","current","focus","match","params","id","axios","get","API_URL","then","result","catch","err","response","toast","error","message","console","log","onChange","e","target","checked","value","gotBackToTable","history","replace","clearForm","className","sm","md","lg","xs","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","put","success","post","noValidate","inputRut","handleChange","ref","inputName","inputSpin","inputAddress","inputEmail","inputPhone","inputPhone2","Group","Label","style","fontWeight","type","size","variant","block","onClick","defaultProps","required","label","messageErrors","cols"],"mappings":"yRAeMA,EAAqB,SAACC,GAAW,IAAD,EAEFC,oBAAS,GAFP,mBAE7BC,EAF6B,KAElBC,EAFkB,OAGZF,mBAAS,CAC/BG,KAAK,GACLC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,WAAW,IAXuB,mBAG7BC,EAH6B,KAGvBC,EAHuB,KAa9BC,EAAWC,iBAAO,MACxBC,qBAAU,WACRC,IACAH,EAASI,QAAQC,UACjB,IAEF,IAAMF,EAAY,WAEbjB,EAAMoB,MAAMC,OAAOC,IACpBC,IAAMC,IAAIC,IAAQ,cAAczB,EAAMoB,MAAMC,OAAOC,IAAII,MAAK,SAAAC,GAE1Dd,EAAQ,CACNT,KAAMuB,EAAOf,KAAKR,KAClBC,IAAKsB,EAAOf,KAAKP,IACjBE,MAAOoB,EAAOf,KAAKL,MACnBD,KAAMqB,EAAOf,KAAKN,KAClBE,QAASmB,EAAOf,KAAKJ,QACrBC,QAASkB,EAAOf,KAAKH,QACrBC,QAASiB,EAAOf,KAAKF,QACrBC,UAAWgB,EAAOf,KAAKD,UACvBW,GAAIK,EAAOf,KAAKU,QAGjBM,OAAM,SAAAC,GACJA,EAAIC,SACLC,IAAMC,MAAMH,EAAIC,SAASlB,KAAKqB,UAE9BC,QAAQC,IAAIN,GACZE,IAAMC,MAAM,oCAOdI,EAAW,SAAAC,GACM,cAAlBA,EAAEC,OAAOlC,KACVS,EAAQ,2BAAID,GAAL,kBAAYyB,EAAEC,OAAOlC,KAAOiC,EAAEC,OAAOC,WAE5C1B,EAAQ,2BAAID,GAAL,kBAAYyB,EAAEC,OAAOlC,KAAOiC,EAAEC,OAAOE,UA2C1CC,EAAiB,WACrBzC,EAAM0C,QAAQC,QAAQ,wBAGlBC,EAAY,WAChB/B,EAAQ,CACNT,KAAK,GACLC,IAAK,GACLE,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTJ,KAAM,GACNK,WAAW,IAEbR,GAAa,GACbW,EAASI,QAAQC,SAGnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK0B,UAAU,gBACb,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIJ,UAAU,cAC7C,0BAAMA,UAAU,eAAhB,wBACA,6BAAK,8BAEP,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvB,kBAAC,IAAD,CAAME,SAlEO,SAAAb,GAEnB,IAAMc,EAAOd,EAAEe,cAGf,GADAf,EAAEgB,kBAC2B,IAAzBF,EAAKG,gBAGP,OAFAjB,EAAEkB,uBACFpD,GAAa,GAIf,IAAIqD,EAAaC,OAAOC,OAAO,GAAG9C,GAE/B4C,EAAWlC,GACZC,IAAMoC,IAAIlC,IAAQ,cAAc+B,EAAWlC,GAAGkC,GAAY9B,MAAK,SAAAC,GAC7DI,IAAM6B,QAAQ,uBACdnB,OACCb,OAAM,SAAAC,GACJA,EAAIC,SACLC,IAAMC,MAAMH,EAAIC,SAASlB,KAAKqB,SAE9BF,IAAMC,MAAM,kCAIhBT,IAAMsC,KAAKpC,IAAQ,aAAa+B,GAAY9B,MAAK,SAAAC,GAC/CI,IAAM6B,QAAQ,mBACdhB,OACChB,OAAM,SAAAC,GACJA,EAAIC,SACLC,IAAMC,MAAMH,EAAIC,SAASlB,KAAKqB,SAE9BF,IAAMC,MAAM,mCAkCkB8B,YAAU,EAAC5D,UAAWA,GAClD,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACMF,EAAM+D,SADZ,CAEEvB,MAAO5B,EAAKP,IACZ2D,aAAc5B,EACd6B,IAAKnD,KAEP,kBAAC,IAAD,iBACMd,EAAMkE,UADZ,CAEE1B,MAAO5B,EAAKR,KACZ4D,aAAc5B,KAEhB,kBAAC,IAAD,iBACMpC,EAAMmE,UADZ,CAEE3B,MAAO5B,EAAKN,KACZ0D,aAAc5B,MAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACMpC,EAAMoE,aADZ,CAEE5B,MAAO5B,EAAKF,QACZsD,aAAc5B,KAEhB,kBAAC,IAAD,iBACMpC,EAAMqE,WADZ,CAEE7B,MAAO5B,EAAKL,MACZyD,aAAc5B,KAEhB,kBAAC,IAAD,iBACMpC,EAAMsE,WADZ,CAEE9B,MAAO5B,EAAKJ,QACZwD,aAAc5B,MAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACMpC,EAAMuE,YADZ,CAEE/B,MAAO5B,EAAKH,QACZuD,aAAc5B,KAEhB,kBAAC,IAAKoC,MAAN,CAAY3B,UAAU,oCACpB,kBAAC,IAAK4B,MAAN,CAAYC,MAAO,CAACC,WAAY,SAAhC,mBACA,6BACA,2BAAOC,KAAK,WAAWxE,KAAK,YAAYmC,QAAS3B,EAAKD,UAAWyB,SAAUA,EAAUI,MAAO5B,EAAKD,cAGrG,kBAAC,IAAD,CAAKkC,UAAU,0BACb,kBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAAC,IAAD,CAAQ4B,KAAK,SAASC,KAAK,KAAKC,QAAQ,UAAUC,OAAO,GAAzD,YAEF,kBAAC,IAAD,CAAKjC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAAC,IAAD,CAAQ4B,KAAK,SAASC,KAAK,KAAKC,QAAQ,SAASC,OAAO,EAAMC,QAASvC,GAAvE,iBAUhB1C,EAAmBkF,aAAe,CAChClB,SAAU,CACRa,KAAM,OACNM,UAAU,EACV9E,KAAM,MACN+E,MAAQ,MACRC,cAAe,CACb,cAEFC,KAAK,uCAEPlB,UAAW,CACTS,KAAM,OACNM,UAAU,EACV9E,KAAM,OACN+E,MAAQ,OACRC,cAAe,CACb,cAEFC,KAAK,uCAEPnB,UAAW,CACTU,KAAM,OACNM,UAAU,EACV9E,KAAM,OACN+E,MAAQ,SACRC,cAAe,CACb,cAEFC,KAAK,uCAEPjB,aAAc,CACZQ,KAAM,WACNM,UAAU,EACV9E,KAAM,UACN+E,MAAQ,eACRC,cAAe,CACb,cAEFC,KAAK,uCAEPhB,WAAY,CACVO,KAAM,QACNM,UAAU,EACV9E,KAAM,QACN+E,MAAQ,QACRC,cAAe,CACb,cAAc,wBAEhBC,KAAK,uCAEPf,WAAY,CACVM,KAAM,SACNM,UAAU,EACV9E,KAAM,UACN+E,MAAQ,wBACRC,cAAe,CACb,cAEFC,KAAK,uCAEPd,YAAa,CACXK,KAAM,SACNM,UAAU,EACV9E,KAAM,UACN+E,MAAQ,sBACRC,cAAe,CACb,cAEFC,KAAK,wCAIMtF","file":"static/js/74.b2de156b.chunk.js","sourcesContent":["import React, { useState , useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EnterpriseFormPage = (props) => {\r\n\r\n  const [validated, setValidated] = useState(false)\r\n  const [data, setData] = useState({\r\n    name:'',\r\n    rut: '',\r\n    spin: '',\r\n    email: '',\r\n    phone_1: '',\r\n    phone_2: '',\r\n    address: '',\r\n    is_active: true\r\n  })\r\n  const inputRef = useRef(null)\r\n  useEffect(() => {\r\n    fetchData()\r\n    inputRef.current.focus()\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    let promises = []\r\n    if(props.match.params.id){\r\n      axios.get(API_URL+'enterprise/'+props.match.params.id).then(result => {\r\n\r\n        setData({\r\n          name: result.data.name,\r\n          rut: result.data.rut,\r\n          email: result.data.email,\r\n          spin: result.data.spin,\r\n          phone_1: result.data.phone_1,\r\n          phone_2: result.data.phone_2,\r\n          address: result.data.address,\r\n          is_active: result.data.is_active,\r\n          id: result.data.id\r\n        })\r\n\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          console.log(err);\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    if(e.target.name === 'is_active'){\r\n      setData({...data, [e.target.name]: e.target.checked})\r\n    }else{\r\n      setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},data)\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'enterprise/'+objectPost.id,objectPost).then(result => {\r\n        toast.success('Registro Modificado')\r\n        gotBackToTable()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'enterprise',objectPost).then(result => {\r\n        toast.success('Registro Creado')\r\n        clearForm()\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const gotBackToTable = () => {\r\n    props.history.replace('/masters/enterprise')\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name:'',\r\n      rut: '',\r\n      email: '',\r\n      phone_1: '',\r\n      phone_2: '',\r\n      address: '',\r\n      spin: '',\r\n      is_active: true,\r\n    })\r\n    setValidated(false)\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"containerDiv\">\r\n        <Col sm={12} md={12} lg={12} xs={12} className=\"text-right\">\r\n          <span className=\"text-danger\">*Campos Obligatorios</span>\r\n          <br/><br/>\r\n        </Col>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n            <Row>\r\n              <InputFieldRef\r\n                {...props.inputRut}\r\n                value={data.rut}\r\n                handleChange={onChange}\r\n                ref={inputRef}\r\n              />\r\n              <InputField\r\n                {...props.inputName}\r\n                value={data.name}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputSpin}\r\n                value={data.spin}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputAddress}\r\n                value={data.address}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputEmail}\r\n                value={data.email}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                {...props.inputPhone}\r\n                value={data.phone_1}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputPhone2}\r\n                value={data.phone_2}\r\n                handleChange={onChange}\r\n              />\r\n              <Form.Group className=\"col-md-6 col-sm-6 col-lg-6 col-6\">\r\n                <Form.Label style={{fontWeight: 'bold'}}>Empresa Activa?</Form.Label>\r\n                <br/>\r\n                <input type=\"checkbox\" name=\"is_active\" checked={data.is_active} onChange={onChange} value={data.is_active} />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" block={true}>Guardar</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button type=\"submit\" size=\"sm\" variant=\"danger\" block={true} onClick={gotBackToTable}>Volver</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nEnterpriseFormPage.defaultProps = {\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputSpin: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'spin',\r\n    label : 'Giro',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputAddress: {\r\n    type: 'textarea',\r\n    required: true,\r\n    name: 'address',\r\n    label : 'Dirección',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: true,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*,',' Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_1',\r\n    label : 'Teléfono Principal',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n  inputPhone2: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone_2',\r\n    label : 'Telefono Secundario',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\"\r\n  },\r\n}\r\n\r\nexport default EnterpriseFormPage\r\n"],"sourceRoot":""}